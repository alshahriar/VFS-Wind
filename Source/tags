!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACL_read_ucd	rotor_model.c	/^PetscErrorCode ACL_read_ucd(IBMNodes *ibm, int ibi, FSInfo *fsi, double reflength)$/;"	f
AL_Noslip	main.c	/^PetscInt AL_Noslip=0;$/;"	v
AddIBMNode	variables.c	/^void AddIBMNode(IBMList *ilist, IBMInfo ibm_intp)$/;"	f
Add_IBMFlux_to_Outlet	poisson.c	/^void Add_IBMFlux_to_Outlet(UserCtx *user, PetscReal ibm_Flux)$/;"	f
Advect_Levelset	level.c	/^void Advect_Levelset(UserCtx *user, double dt)$/;"	f
Aj	data.c	/^	Vec 	Csi, Eta, Zet, Aj;$/;"	m	struct:__anon18	file:
Aj	data05.c	/^  Vec 	Csi, Eta, Zet, Aj;$/;"	m	struct:__anon9	file:
Angle_repose	main.c	/^PetscReal Angle_repose=50; $/;"	v
Ap	poisson_hypre.c	/^HYPRE_IJMatrix Ap;$/;"	v
ApproxBC_wm	main.c	/^PetscInt ApproxBC_wm = 0;$/;"	v
ArbitraryRotate	rotor_model.c	/^Cmpnts ArbitraryRotate(Cmpnts p, double theta, Cmpnts r) $/;"	f
Average	momentum.c	/^void Average(Cmpnts &a1, Cmpnts &a2, Cmpnts &a3, Cmpnts &a4, Cmpnts &a5, Cmpnts &a6, Cmpnts &a7, Cmpnts &a8, Cmpnts *A)$/;"	f
Average	momentum.c	/^void Average(Cmpnts &a1, Cmpnts &a2, Cmpnts &a3, Cmpnts &a4, Cmpnts *A)$/;"	f
Average	momentum.c	/^void Average(Cmpnts &a1, Cmpnts &a2, Cmpnts *A)$/;"	f
Average	momentum.c	/^void Average(double &a1, double &a2, double &a3, double &a4, double &a5, double &a6, double &a7, double &a8, double *A)$/;"	f
Average	momentum.c	/^void Average(double &a1, double &a2, double &a3, double &a4, double *A)$/;"	f
Average	momentum.c	/^void Average(double &a1, double &a2, double *A)$/;"	f
AxByC	momentum.c	/^void AxByC ( double a, Cmpnts &X, double b, Cmpnts &Y, Cmpnts *C) $/;"	f
AxC	momentum.c	/^void AxC ( double a, Cmpnts &X, Cmpnts *C) $/;"	f
B	wallfunction.c	/^double kappa=0.41, B=5.5;$/;"	v
BCS	data.c	/^} BCS;$/;"	t	typeref:struct:__anon16	file:
BCS	data05.c	/^} BCS;$/;"	t	typeref:struct:__anon7	file:
BE	poisson.c	973;"	d	file:
BN	poisson.c	969;"	d	file:
BP	poisson.c	963;"	d	file:
BS	poisson.c	971;"	d	file:
BW	poisson.c	975;"	d	file:
Bcs	data.c	/^	BCS	Bcs;$/;"	m	struct:__anon18	file:
Bcs	data05.c	/^  BCS	Bcs;$/;"	m	struct:__anon9	file:
BilinearInterpolation	implicitsolver.c	/^PetscReal BilinearInterpolation(Cpt2D host[4], Cpt2D p, PetscReal val[4])$/;"	f
Blank_Interface	bcs.c	/^PetscErrorCode Blank_Interface(UserCtx *user) {$/;"	f
Block_Interface_P	bcs.c	/^PetscErrorCode Block_Interface_P(UserCtx *user) {$/;"	f
Block_Interface_U	bcs.c	/^PetscErrorCode Block_Interface_U(UserCtx *user) {$/;"	f
BoundingSphere	ibm.c	/^PetscErrorCode BoundingSphere(IBMNodes *ibm)$/;"	f
C1	k-omega.c	/^const double C1=10.0, C2=2.0;	\/\/ C1=1~10, C2=2~5$/;"	v
C2	k-omega.c	/^const double C1=10.0, C2=2.0;	\/\/ C1=1~10, C2=2~5$/;"	v
CMx_c	main.c	/^PetscReal CMx_c=0., CMy_c=0., CMz_c=0.;$/;"	v
CMy_c	main.c	/^PetscReal CMx_c=0., CMy_c=0., CMz_c=0.;$/;"	v
CMz_c	main.c	/^PetscReal CMx_c=0., CMy_c=0., CMz_c=0.;$/;"	v
COEF_TIME_ACCURACY	main.c	/^PetscReal COEF_TIME_ACCURACY=1.5;$/;"	v
CP	poisson.c	957;"	d	file:
CROSS	compgeom.c	13;"	d	file:
CV_Boundary	fsi.c	/^PetscErrorCode CV_Boundary(UserCtx *user, FSInfo *fsi, PetscInt ibi)$/;"	f
C_iww	main.c	/^PetscReal a_iww, lamda_iww, C_iww;$/;"	v
CalcRHS	implicitsolver.c	/^PetscErrorCode CalcRHS(UserCtx *user, int dudt)$/;"	f
Calc_FSI_Ang	fsi_move.c	/^PetscErrorCode Calc_FSI_Ang(FSInfo *FSinfo,IBMNodes *ibm, $/;"	f
Calc_FSI_Ang_intg	fsi_move.c	/^PetscErrorCode Calc_FSI_Ang_intg(FSInfo *FSinfo,IBMNodes *ibm, $/;"	f
Calc_FSI_Ang_staggered	fsi_move.c	/^PetscErrorCode Calc_FSI_Ang_staggered(FSInfo *FSinfo,IBMNodes *ibm, $/;"	f
Calc_FSI_pos	fsi_move.c	/^PetscErrorCode Calc_FSI_pos(FSInfo *FSinfo,IBMNodes *ibm, $/;"	f
Calc_FSI_pos_6dof_levelset	fsi_move.c	/^PetscErrorCode Calc_FSI_pos_6dof_levelset(FSInfo *FSinfo,IBMNodes *ibm, $/;"	f
Calc_FSI_pos_SC	fsi_move.c	/^PetscErrorCode Calc_FSI_pos_SC(FSInfo *FSinfo,IBMNodes *ibm, $/;"	f
Calc_FSI_pos_SC_levelset	fsi_move.c	/^PetscErrorCode Calc_FSI_pos_SC_levelset(FSInfo *FSinfo,IBMNodes *ibm, $/;"	f
Calc_F_eul	rotor_model.c	/^PetscErrorCode Calc_F_eul(UserCtx *user, IBMNodes *ibm, FSInfo *fsi, PetscInt NumberOfObjects, double dh, int df)$/;"	f
Calc_F_eul_old	rotor_model.c	/^PetscErrorCode Calc_F_eul_old(UserCtx *user, IBMNodes *ibm, FSInfo *fsi, int NumberOfObjects, double dh, int df)$/;"	f
Calc_F_lagr	rotor_model.c	/^PetscErrorCode Calc_F_lagr(UserCtx *user, IBMNodes *ibm, FSInfo *fsi, int NumberOfObjects)$/;"	f
Calc_F_lagr_ACL	rotor_model.c	/^PetscErrorCode Calc_F_lagr_ACL(UserCtx *user, IBMNodes *ibm, FSInfo *fsi, ACL *acl, int NumberOfObjects)$/;"	f
Calc_F_lagr_noslip	rotor_model.c	/^PetscErrorCode Calc_F_lagr_noslip(UserCtx *user, IBMNodes *ibm, FSInfo *fsi, int NumberOfObjects)$/;"	f
Calc_Ftmprt_eul	rotor_model.c	/^PetscErrorCode Calc_Ftmprt_eul(UserCtx *user, IBMNodes *ibm, FSInfo *fsi, PetscInt NumberOfObjects, double dh, int df)$/;"	f
Calc_Ftmprt_lagr	rotor_model.c	/^PetscErrorCode Calc_Ftmprt_lagr(UserCtx *user, IBMNodes *ibm, FSInfo *fsi, int NumberOfObjects)$/;"	f
Calc_Inlet_Area	bcs.c	/^void Calc_Inlet_Area(UserCtx *user){$/;"	f
Calc_Minimum_dt	momentum.c	/^double Calc_Minimum_dt (UserCtx *user)$/;"	f
Calc_Moments	fsi.c	/^PetscErrorCode Calc_Moments(FSInfo *FSinfo, IBMNodes *ibm, SurfElmtInfo *elmtinfo, PetscReal Re, PetscInt ti)   $/;"	f
Calc_ShearStress	rhs2.c	/^void Calc_ShearStress(UserCtx *user)$/;"	f
Calc_Tmprt_lagr	rotor_model.c	/^PetscErrorCode Calc_Tmprt_lagr(UserCtx *user, IBMNodes *ibm, FSInfo *fsi, int NumberOfObjects)$/;"	f
Calc_U_lagr	rotor_model.c	/^PetscErrorCode Calc_U_lagr(UserCtx *user, IBMNodes *ibm, FSInfo *fsi, int NumberOfObjects)$/;"	f
Calc_avg_shear_stress	data.c	/^void Calc_avg_shear_stress(UserCtx *user)$/;"	f
Calc_avg_shear_stress	data05.c	/^void Calc_avg_shear_stress(UserCtx *user)$/;"	f
Calc_eulforces_ACL	rotor_model.c	/^PetscErrorCode Calc_eulforces_ACL(UserCtx *user, IBMNodes *ibm, FSInfo *fsi, int bi)$/;"	f
Calc_forces	fsi.c	/^PetscErrorCode Calc_forces(FSInfo *FSinfo, IBMNodes *ibm, SurfElmtInfo *elmtinfo,PetscReal Re,PetscInt ti)   $/;"	f
Calc_forces2	fsi.c	/^PetscErrorCode Calc_forces2(FSInfo *FSinfo, IBMNodes *ibm, SurfElmtInfo *elmtinfo,PetscReal Re,PetscInt ti)   $/;"	f
Calc_forces_ACL	rotor_model.c	/^PetscErrorCode Calc_forces_ACL(UserCtx *user, IBMNodes *ibm, FSInfo *fsi, int bi)$/;"	f
Calc_forces_CVM2D	fsi.c	/^PetscErrorCode Calc_forces_CVM2D(UserCtx *user, FSInfo *fsi, PetscInt ti) $/;"	f
Calc_forces_CVM2D_2	fsi.c	/^PetscErrorCode Calc_forces_CVM2D_2(UserCtx *user, FSInfo *fsi, PetscInt ti) $/;"	f
Calc_forces_SI	fsi.c	/^PetscErrorCode Calc_forces_SI(FSInfo *fsi,UserCtx *user,$/;"	f
Calc_forces_SI_levelset	fsi.c	/^PetscErrorCode Calc_forces_SI_levelset(FSInfo *fsi,UserCtx *user,$/;"	f
Calc_forces_rotor	rotor_model.c	/^PetscErrorCode Calc_forces_rotor(UserCtx *user, IBMNodes *ibm, FSInfo *fsi, int bi, char fname[80], int NumberOfObjects)$/;"	f
Calc_free_surface_location	level.c	/^void Calc_free_surface_location(UserCtx *user)$/;"	f
Calc_fsi_surf_stress	fsi.c	/^PetscErrorCode Calc_fsi_surf_stress(IBMInfo *ibminfo, UserCtx *user, IBMNodes *ibm, SurfElmtInfo *elmtinfo)$/;"	f
Calc_fsi_surf_stress2	fsi.c	/^PetscErrorCode Calc_fsi_surf_stress2(IBMInfo *ibminfo, UserCtx *user, IBMNodes *ibm, SurfElmtInfo *elmtinfo)$/;"	f
Calc_fsi_surf_stress_advanced	fsi.c	/^PetscErrorCode Calc_fsi_surf_stress_advanced(IBMInfo *ibminfo, UserCtx *user, IBMNodes *ibm, SurfElmtInfo *elmtinfo)$/;"	f
Calc_k_Flux	rhs2.c	/^void Calc_k_Flux(UserCtx *user)$/;"	f
Calc_turbineangvel	rotor_model.c	/^PetscErrorCode Calc_turbineangvel(PetscReal dt, IBMNodes *ibm, FSInfo *fsi)$/;"	f
Calculate_Covariant_metrics	data.c	/^void Calculate_Covariant_metrics(double g[3][3], double G[3][3])$/;"	f
Calculate_Covariant_metrics	data05.c	/^void Calculate_Covariant_metrics(double g[3][3], double G[3][3])$/;"	f
Calculate_Covariant_metrics	rhs2.c	/^void Calculate_Covariant_metrics(double g[3][3], double G[3][3])$/;"	f
Calculate_Covariant_tensor	rhs2.c	/^void Calculate_Covariant_tensor(double g[3][3], double G[3][3])$/;"	f
Calculate_dxdydz	rhs2.c	/^void Calculate_dxdydz(PetscReal ajc, Cmpnts csi, Cmpnts eta, Cmpnts zet, double *dx, double *dy, double *dz)$/;"	f
Calculate_normal	data.c	/^void Calculate_normal(Cmpnts csi, Cmpnts eta, Cmpnts zet, double ni[3], double nj[3], double nk[3])$/;"	f
Calculate_normal	data05.c	/^void Calculate_normal(Cmpnts csi, Cmpnts eta, Cmpnts zet, double ni[3], double nj[3], double nk[3])$/;"	f
Calculate_normal	rhs2.c	/^void Calculate_normal(Cmpnts csi, Cmpnts eta, Cmpnts zet, double ni[3], double nj[3], double nk[3])$/;"	f
Calculate_normal_and_area	rhs2.c	/^void Calculate_normal_and_area(Cmpnts csi, Cmpnts eta, Cmpnts zet, double ni[3], double nj[3], double nk[3], double *Ai, double *Aj, double *Ak)$/;"	f
Cent	data.c	/^	Vec	Cent;	\/\/ Coordinates of cell centers$/;"	m	struct:__anon18	file:
Cent	data05.c	/^  Vec	Cent;	\/\/ Coordinates of cell centers$/;"	m	struct:__anon9	file:
Closest_NearBndryPt_ToSurfElmt	fsi.c	/^PetscErrorCode Closest_NearBndryPt_ToSurfElmt(UserCtx *user, IBMNodes *ibm, SurfElmtInfo *elmtinfo, FSInfo *fsi, PetscInt ibi)$/;"	f
Closest_NearBndryPt_ToSurfElmt2	fsi.c	/^PetscErrorCode Closest_NearBndryPt_ToSurfElmt2(UserCtx *user, IBMNodes *ibm, SurfElmtInfo *elmtinfo, FSInfo *fsi, PetscInt ibi)$/;"	f
Closest_NearBndryPt_ToSurfElmt3	fsi.c	/^PetscErrorCode Closest_NearBndryPt_ToSurfElmt3(UserCtx *user, IBMNodes *ibm, SurfElmtInfo *elmtinfo, FSInfo *fsi, PetscInt ibi)$/;"	f
Closest_NearBndryPt_ToSurfElmt4	fsi.c	/^PetscErrorCode Closest_NearBndryPt_ToSurfElmt4(UserCtx *user, IBMNodes *ibm, SurfElmtInfo *elmtinfo, FSInfo *fsi, PetscInt ibi)$/;"	f
Cmpnts	data.c	/^} Cmpnts;$/;"	t	typeref:struct:__anon13	file:
Cmpnts	data05.c	/^} Cmpnts;$/;"	t	typeref:struct:__anon4	file:
Cmpnts2	data.c	/^} Cmpnts2;$/;"	t	typeref:struct:__anon14	file:
Cmpnts2	data05.c	/^} Cmpnts2;$/;"	t	typeref:struct:__anon5	file:
CollisionDetectionOfCylinders	fsi_move.c	/^PetscErrorCode CollisionDetectionOfCylinders(FSInfo *fsi, $/;"	f
Combine_Elmt	bmv.c	/^PetscErrorCode Combine_Elmt(IBMNodes *ibm, IBMNodes *ibm0, IBMNodes *ibm1)$/;"	f
Combine_Elmt	data.c	/^PetscErrorCode Combine_Elmt(IBMNodes *ibm, IBMNodes *ibm0, IBMNodes *ibm1)$/;"	f
Combine_Elmt	data05.c	/^PetscErrorCode Combine_Elmt(IBMNodes *ibm, IBMNodes *ibm0, IBMNodes *ibm1)$/;"	f
Compute_Density	level.c	/^void Compute_Density(UserCtx *user)$/;"	f
Compute_Distance_Function	distance.c	/^void Compute_Distance_Function(UserCtx *user)$/;"	f
Compute_Q	rhs2.c	/^void Compute_Q(UserCtx *user, Vec Q)$/;"	f
Compute_Smagorinsky_Constant_1	les.c	/^void Compute_Smagorinsky_Constant_1(UserCtx *user, Vec Ucont, Vec Ucat)$/;"	f
Compute_Surface_Tension	level.c	/^void Compute_Surface_Tension(UserCtx *user)$/;"	f
Compute_dkdo_center	k-omega.c	/^void Compute_dkdo_center (int i, int j, int k,  int mx, int my, int mz, Cmpnts2 ***komega, PetscReal ***nvert, $/;"	f
Compute_dkdo_dxyz	k-omega.c	/^void Compute_dkdo_dxyz (	double csi0, double csi1, double csi2, double eta0, double eta1, double eta2, double zet0, double zet1, double zet2, double ajc,$/;"	f
Compute_dlevel_center_levelset	distance.c	/^void Compute_dlevel_center_levelset \/*100202*\/(int i, int j, int k,  int mx, int my, int mz, double sgn, int wall_distance, PetscReal ***level, PetscReal ***nvert, double *dldc, double *dlde, double *dldz)$/;"	f
Compute_dlevel_center_levelset_100303	distance.c	/^void Compute_dlevel_center_levelset_100303 (int i, int j, int k,  int mx, int my, int mz, double sgn, int wall_distance, PetscReal ***level, PetscReal ***nvert, double *dldc, double *dlde, double *dldz)$/;"	f
Compute_dscalar_center	k-omega.c	/^void Compute_dscalar_center (int i, int j, int k,  int mx, int my, int mz, PetscReal ***K, PetscReal ***nvert, double *dkdc, double *dkde, double *dkdz)$/;"	f
Compute_dscalar_dxyz	k-omega.c	/^void Compute_dscalar_dxyz ( double csi0, double csi1, double csi2, double eta0, double eta1, double eta2, double zet0, double zet1, double zet2, double ajc,$/;"	f
Compute_dscalar_i	k-omega.c	/^void Compute_dscalar_i (int i, int j, int k, int mx, int my, int mz, PetscReal ***K, PetscReal ***nvert, double *dkdc, double *dkde, double *dkdz )$/;"	f
Compute_dscalar_j	k-omega.c	/^void Compute_dscalar_j (int i, int j, int k, int mx, int my, int mz, PetscReal ***K, PetscReal ***nvert, double *dkdc, double *dkde, double *dkdz )$/;"	f
Compute_dscalar_k	k-omega.c	/^void Compute_dscalar_k (int i, int j, int k, int mx, int my, int mz, PetscReal ***K, PetscReal ***nvert, double *dkdc, double *dkde, double *dkdz )$/;"	f
Compute_du_center	data.c	/^void Compute_du_center (int i, int j, int k,  int mx, int my, int mz, Cmpnts ***ucat, PetscReal ***nvert,$/;"	f
Compute_du_center	data05.c	/^void Compute_du_center (int i, int j, int k,  int mx, int my, int mz, Cmpnts ***ucat, PetscReal ***nvert, $/;"	f
Compute_du_center	k-omega.c	/^void Compute_du_center (int i, int j, int k,  int mx, int my, int mz, Cmpnts ***ucat, PetscReal ***nvert, $/;"	f
Compute_du_dxyz	data.c	/^void Compute_du_dxyz (	double csi0, double csi1, double csi2, double eta0, double eta1, double eta2, double zet0, double zet1, double zet2, double ajc,$/;"	f
Compute_du_dxyz	data05.c	/^void Compute_du_dxyz (	double csi0, double csi1, double csi2, double eta0, double eta1, double eta2, double zet0, double zet1, double zet2, double ajc,$/;"	f
Compute_du_dxyz	k-omega.c	/^void Compute_du_dxyz (	double csi0, double csi1, double csi2, double eta0, double eta1, double eta2, double zet0, double zet1, double zet2, double ajc,$/;"	f
Compute_du_i	k-omega.c	/^void Compute_du_i (int i, int j, int k, int mx, int my, int mz, Cmpnts ***ucat, PetscReal ***nvert, $/;"	f
Compute_du_j	k-omega.c	/^void Compute_du_j (int i, int j, int k, int mx, int my, int mz, Cmpnts ***ucat, PetscReal ***nvert, $/;"	f
Compute_du_k	k-omega.c	/^void Compute_du_k (int i, int j, int k, int mx, int my, int mz, Cmpnts ***ucat, PetscReal ***nvert, $/;"	f
Compute_eddy_viscosity_LES	les.c	/^void Compute_eddy_viscosity_LES(UserCtx *user)$/;"	f
Contra2Cart	rhs.c	/^void Contra2Cart(UserCtx *user)$/;"	f
Contra2Cart_2	rhs.c	/^void Contra2Cart_2(UserCtx *user)$/;"	f
Contra2Cart_single	rhs.c	/^void Contra2Cart_single(Cmpnts &csi, Cmpnts &eta, Cmpnts &zet, Cmpnts &ucont, Cmpnts *ucat)$/;"	f
Contravariant_Reynolds_stress	data.c	/^double Contravariant_Reynolds_stress(double uu, double uv, double uw, double vv, double vw, double ww,$/;"	f
Contravariant_Reynolds_stress	data05.c	/^double Contravariant_Reynolds_stress(double uu, double uv, double uw, double vv, double vw, double ww,$/;"	f
Contravariant_Reynolds_stress	ibm.c	/^double Contravariant_Reynolds_stress(double uu, double uv, double uw, double vv, double vw, double ww,$/;"	f
Convection	rhs.c	/^PetscErrorCode Convection(UserCtx *user, Vec Ucont, Vec Ucat, Vec Conv)$/;"	f
Convert_Phi2_Phi	poisson.c	/^void Convert_Phi2_Phi(UserCtx *user)$/;"	f
Convert_RHS_RHS2	poisson.c	/^void Convert_RHS_RHS2(UserCtx *user, Vec RHS, Vec RHS2)$/;"	f
Convert_Ucont2_Ucont	poisson.c	/^void Convert_Ucont2_Ucont(UserCtx *user)$/;"	f
Convert_Ucont_Ucont2	poisson.c	/^void Convert_Ucont_Ucont2(UserCtx *user)$/;"	f
Create_Hypre_Matrix	poisson_hypre.c	/^void Create_Hypre_Matrix(UserCtx *user)$/;"	f
Create_Hypre_Solver	poisson_hypre.c	/^void Create_Hypre_Solver()$/;"	f
Create_Hypre_Vector	poisson_hypre.c	/^void Create_Hypre_Vector(UserCtx *user)$/;"	f
Cross	ibm.c	38;"	d	file:
Csi	data.c	/^	Vec 	Csi, Eta, Zet, Aj;$/;"	m	struct:__anon18	file:
Csi	data05.c	/^  Vec 	Csi, Eta, Zet, Aj;$/;"	m	struct:__anon9	file:
DOT	compgeom.c	18;"	d	file:
DestroyIBMList	variables.c	/^void DestroyIBMList(IBMList *ilist)$/;"	f
Destroy_Hypre_Matrix	poisson_hypre.c	/^void Destroy_Hypre_Matrix(UserCtx *user)$/;"	f
Destroy_Hypre_Solver	poisson_hypre.c	/^void Destroy_Hypre_Solver()$/;"	f
Destroy_Hypre_Vector	poisson_hypre.c	/^void Destroy_Hypre_Vector(UserCtx *user)$/;"	f
Destroy_LevelSet_Vectors	distance.c	/^void Destroy_LevelSet_Vectors(UserCtx	*user)$/;"	f
Destroy_Levelset_Vectors	level.c	/^void Destroy_Levelset_Vectors(UserCtx *user)$/;"	f
Dis_P_Line	compgeom.c	/^PetscErrorCode Dis_P_Line(Cmpnts p, Cmpnts p1, Cmpnts p2, Cmpnts *po, PetscReal *d)$/;"	f
Dist	ibm.c	36;"	d	file:
Distance_Function_IC	distance.c	/^void Distance_Function_IC(UserCtx	*user)$/;"	f
Distance_Function_RHS	distance.c	/^void Distance_Function_RHS (UserCtx *user, Vec Levelset_RHS, int wall_distance)$/;"	f
Divergence	main.c	/^PetscErrorCode Divergence(UserCtx *user)$/;"	f
Do_averaging	poisson.c	/^PetscErrorCode Do_averaging(UserCtx *user)$/;"	f
EP	poisson.c	958;"	d	file:
EPSILON	compgeom.c	12;"	d	file:
ERF	rhs2.c	/^std::complex<double> ERF(std::complex<double> z) \/\/ a+bi$/;"	f	class:std
Elmt_Init_Cyl	bmv.c	/^PetscErrorCode Elmt_Init_Cyl(IBMNodes *ibm, UserCtx *user)$/;"	f
Elmt_Move	bmv.c	/^PetscErrorCode Elmt_Move(IBMNodes *ibm, UserCtx *user)$/;"	f
Elmt_Move	data.c	/^PetscErrorCode Elmt_Move(IBMNodes *ibm, UserCtx *user)$/;"	f
Elmt_Move	data05.c	/^PetscErrorCode Elmt_Move(IBMNodes *ibm, UserCtx *user)$/;"	f
Elmt_Move1	data.c	/^PetscErrorCode Elmt_Move1(IBMNodes *ibm, UserCtx *user)$/;"	f
Elmt_Move1	data05.c	/^PetscErrorCode Elmt_Move1(IBMNodes *ibm, UserCtx *user)$/;"	f
Elmt_Move_FSI_ROT	fsi_move.c	/^PetscErrorCode Elmt_Move_FSI_ROT(FSInfo *FSinfo, IBMNodes *ibm, $/;"	f
Elmt_Move_FSI_ROT_TRANS	fsi_move.c	/^PetscErrorCode Elmt_Move_FSI_ROT_TRANS(FSInfo *FSinfo, IBMNodes *ibm,PetscReal dt, PetscInt ibi)$/;"	f
Elmt_Move_FSI_TRANS	fsi_move.c	/^PetscErrorCode Elmt_Move_FSI_TRANS(FSInfo *FSinfo, IBMNodes *ibm)$/;"	f
Epsilon_Eq	poisson.c	3926;"	d	file:
Eta	data.c	/^	Vec 	Csi, Eta, Zet, Aj;$/;"	m	struct:__anon18	file:
Eta	data05.c	/^  Vec 	Csi, Eta, Zet, Aj;$/;"	m	struct:__anon9	file:
Export_lagrdata	rotor_model.c	/^PetscErrorCode Export_lagrdata(FSInfo *FSinfo, IBMNodes *ibm, PetscReal dt, int ibi, char fname[80], int dimension)$/;"	f
FARFIELD	bcs.c	25;"	d	file:
FSI_DATA_Input	fsi_move.c	/^PetscErrorCode FSI_DATA_Input(FSInfo *FSinf, PetscInt ibi)$/;"	f
FSI_DATA_Output	fsi_move.c	/^PetscErrorCode FSI_DATA_Output(FSInfo *FSinfo, PetscInt ibi)$/;"	f
Field	data.c	/^} Field;$/;"	t	typeref:struct:__anon12	file:
Field	data05.c	/^} Field;$/;"	t	typeref:struct:__anon3	file:
Find_fsi_2nd_interp_Coeff	fsi.c	/^PetscErrorCode Find_fsi_2nd_interp_Coeff(PetscInt i, PetscInt j,$/;"	f
Find_fsi_2nd_interp_Coeff2	fsi.c	/^PetscErrorCode Find_fsi_2nd_interp_Coeff2(PetscInt i, PetscInt j,$/;"	f
Find_fsi_3rd_interp_Coeff	fsi.c	/^PetscErrorCode Find_fsi_3rd_interp_Coeff(PetscInt i, PetscInt j,$/;"	f
Find_fsi_interp_Coeff	fsi.c	/^PetscErrorCode Find_fsi_interp_Coeff(IBMInfo *ibminfo, UserCtx *user, IBMNodes *ibm, SurfElmtInfo *elmtinfo)$/;"	f
Find_fsi_interp_Coeff2	fsi.c	/^PetscErrorCode Find_fsi_interp_Coeff2(IBMInfo *ibminfo, UserCtx *user, IBMNodes *ibm, SurfElmtInfo *elmtinfo)$/;"	f
FixTipSpeedRatio	main.c	/^PetscInt FixTipSpeedRatio=1;$/;"	v
Float_Eq	poisson.c	3928;"	d	file:
FlowWave	data.c	/^} FlowWave;$/;"	t	typeref:struct:__anon10	file:
FlowWave	data05.c	/^} FlowWave;$/;"	t	typeref:struct:__anon1	file:
Flow_Solver	solvers.c	/^PetscErrorCode Flow_Solver(UserMG *usermg,IBMNodes *ibm, FSInfo *fsi, PetscInt itr_sc, IBMNodes *wtm, ACL *acl, FSInfo *fsi_wt, IBMNodes *ibm_ACD, FSInfo *fsi_IBDelta,IBMNodes *ibm_IBDelta, IBMNodes *ibm_acl2ref, FSInfo *fsi_acl2ref, IBMNodes *ibm_nacelle, FSInfo *fsi_nacelle, SurfElmtInfo *elmtinfo, IBMInfo *fsi_intp)$/;"	f
FluxInSum	main.c	/^PetscReal FluxInSum, FluxInSum_y, FluxInSum_z, FluxOutSum, FluxOutSum_y,FluxOutSum_z;$/;"	v
FluxInSum_gas	main.c	/^PetscReal FluxInSum_gas, FluxOutSum_gas;	\/\/ seokkoo$/;"	v
FluxInSum_y	main.c	/^PetscReal FluxInSum, FluxInSum_y, FluxInSum_z, FluxOutSum, FluxOutSum_y,FluxOutSum_z;$/;"	v
FluxInSum_z	main.c	/^PetscReal FluxInSum, FluxInSum_y, FluxInSum_z, FluxOutSum, FluxOutSum_y,FluxOutSum_z;$/;"	v
FluxOutSum	main.c	/^PetscReal FluxInSum, FluxInSum_y, FluxInSum_z, FluxOutSum, FluxOutSum_y,FluxOutSum_z;$/;"	v
FluxOutSum_gas	main.c	/^PetscReal FluxInSum_gas, FluxOutSum_gas;	\/\/ seokkoo$/;"	v
FluxOutSum_y	main.c	/^PetscReal FluxInSum, FluxInSum_y, FluxInSum_z, FluxOutSum, FluxOutSum_y,FluxOutSum_z;$/;"	v
FluxOutSum_z	main.c	/^PetscReal FluxInSum, FluxInSum_y, FluxInSum_z, FluxOutSum, FluxOutSum_y,FluxOutSum_z;$/;"	v
Flux_in	data.c	/^PetscInt ti, block_number, Flux_in;$/;"	v
Flux_in	data05.c	/^PetscInt ti, block_number, Flux_in;$/;"	v
Flux_in	main.c	/^PetscReal	Flux_in = 4.104388e-04, angle = 0;$/;"	v
Force_wm	main.c	/^PetscInt Force_wm = 0;$/;"	v
Forced_Motion	fsi_move.c	/^PetscErrorCode Forced_Motion(FSInfo *fsi,PetscReal A, PetscReal dt)$/;"	f
Forced_Rotation	fsi_move.c	/^PetscErrorCode Forced_Rotation(FSInfo *fsi,PetscReal A, $/;"	f
FormBCS	bcs.c	/^PetscErrorCode FormBCS(UserCtx *user, FSInfo *fsi){$/;"	f
FormFunctionSNES	timeadvancing1.c	/^PetscErrorCode FormFunctionSNES(SNES snes, Vec X, Vec Rhs, void *ctx)$/;"	f
FormFunction_Distance	distance.c	/^PetscErrorCode FormFunction_Distance(SNES	snes,	Vec	L, Vec Rhs,	void *ptr)$/;"	f
FormFunction_K_omega	k-omega.c	/^PetscErrorCode FormFunction_K_omega(SNES snes, Vec K_Omega, Vec Rhs, void *ptr)$/;"	f
FormFunction_Levelset	level.c	/^PetscErrorCode FormFunction_Levelset (SNES snes, Vec L, Vec Rhs, void *ptr)$/;"	f
FormFunction_SNES	momentum.c	/^PetscErrorCode FormFunction_SNES(SNES snes, Vec Ucont, Vec Rhs, void *ptr)$/;"	f
FormFunction_seokkoo	implicitsolver.c	/^PetscErrorCode FormFunction_seokkoo(SNES snes, Vec Ucont, Vec Rhs, void *ptr) \/\/UserCtx *user)$/;"	f
FormFunction_seokkoo2	implicitsolver.c	/^PetscErrorCode FormFunction_seokkoo2(SNES snes, Vec Ucont2, Vec Rhs2, void *ptr)$/;"	f
FormInitialize	init.c	/^PetscErrorCode FormInitialize(UserCtx *user)$/;"	f
FormMetrics	data.c	/^PetscErrorCode FormMetrics(UserCtx *user)$/;"	f
FormMetrics	data05.c	/^PetscErrorCode FormMetrics(UserCtx *user)$/;"	f
FormMetrics	metrics.c	/^PetscErrorCode FormMetrics(UserCtx *user)$/;"	f
Formfunction_2	momentum.c	/^PetscErrorCode Formfunction_2(UserCtx *user, Vec Rhs, double scale)$/;"	f
FsiInitialize	fsi.c	/^PetscErrorCode FsiInitialize(PetscInt n_elmt, FSInfo *fsi,PetscInt ibi)$/;"	f
FullyBlocked	poisson.c	/^PetscErrorCode FullyBlocked(UserCtx *user)$/;"	f
GetPsuedoTime	implicitsolver.c	/^PetscErrorCode GetPsuedoTime(UserCtx *user)$/;"	f
Get_alpha_beta_star	k-omega.c	/^void Get_alpha_beta_star(double ren, double K, double O, double *alpha, double *alpha_star, double *beta_star)$/;"	f
GhostNodeVelocity	timeadvancing.c	/^PetscErrorCode GhostNodeVelocity(UserCtx *user)$/;"	f
GridCellaround2ndElmt	fsi.c	/^PetscErrorCode GridCellaround2ndElmt(UserCtx *user, IBMNodes *ibm,$/;"	f
GridCellaroundSurElmt	fsi.c	/^PetscErrorCode GridCellaroundSurElmt(UserCtx *user, IBMNodes *ibm,SurfElmtInfo *elmtinfo)$/;"	f
GridCellaroundSurElmt2	fsi.c	/^PetscErrorCode GridCellaroundSurElmt2(UserCtx *user, IBMNodes *ibm,SurfElmtInfo *elmtinfo)$/;"	f
GridCellaroundSurElmt3	fsi.c	/^PetscErrorCode GridCellaroundSurElmt3(UserCtx *user, IBMNodes *ibm,SurfElmtInfo *elmtinfo)$/;"	f
GridInterpolation	poisson.c	474;"	d	file:
GridInterpolation	timeadvancing.c	786;"	d	file:
GridRestriction	poisson.c	/^PetscErrorCode GridRestriction(PetscInt i, PetscInt j, PetscInt k,$/;"	f
GridSpace	data.c	/^	Vec	GridSpace;$/;"	m	struct:__anon18	file:
GridSpace	data05.c	/^  Vec	GridSpace;$/;"	m	struct:__anon9	file:
H	level.c	/^double H (double p, double dx)$/;"	f
Hypre_to_Petsc_Vector	poisson_hypre.c	/^void Hypre_to_Petsc_Vector(HYPRE_IJVector &B, Vec A, int i_lower)$/;"	f
IAj	data.c	/^	Vec 	ICsi, IEta, IZet, IAj;$/;"	m	struct:__anon18	file:
IAj	data05.c	/^  Vec 	ICsi, IEta, IZet, IAj;$/;"	m	struct:__anon9	file:
IBMNodes	data.c	/^} IBMNodes;$/;"	t	typeref:struct:__anon17	file:
IBMNodes	data05.c	/^} IBMNodes;$/;"	t	typeref:struct:__anon8	file:
IB_BC	momentum.c	/^void IB_BC(UserCtx *user)$/;"	f
IB_delta	main.c	/^PetscInt IB_delta = 0; \/\/ xyang$/;"	v
IB_wm	main.c	/^PetscInt IB_wm = 0;$/;"	v
IB_wmtmprt	main.c	/^PetscInt IB_wmtmprt = 0;$/;"	v
ICP	ibm.c	/^PetscErrorCode ICP(Cmpnts p, Cmpnts pc[9], PetscReal nfx, PetscReal nfy,$/;"	f
ICP2	ibm.c	/^PetscErrorCode ICP2(Cmpnts p, Cmpnts pc[9], PetscReal nfx, PetscReal nfy,$/;"	f
ICsi	data.c	/^	Vec 	ICsi, IEta, IZet, IAj;$/;"	m	struct:__anon18	file:
ICsi	data05.c	/^  Vec 	ICsi, IEta, IZet, IAj;$/;"	m	struct:__anon9	file:
IEta	data.c	/^	Vec 	ICsi, IEta, IZet, IAj;$/;"	m	struct:__anon18	file:
IEta	data05.c	/^  Vec 	ICsi, IEta, IZet, IAj;$/;"	m	struct:__anon9	file:
IKavg	data.c	/^void IKavg(float *x, int xs, int xe, int ys, int ye, int zs, int ze, int mx, int my, int mz)$/;"	f
IKavg	data05.c	/^void IKavg(float *x, int xs, int xe, int ys, int ye, int zs, int ze, int mx, int my, int mz)$/;"	f
IKavg_c	data.c	/^void IKavg_c (float *x, int xs, int xe, int ys, int ye, int zs, int ze, int mx, int my, int mz)$/;"	f
IKavg_c	data05.c	/^void IKavg_c (float *x, int xs, int xe, int ys, int ye, int zs, int ze, int mx, int my, int mz)$/;"	f
IM	data.c	/^	PetscInt	IM, JM, KM; \/\/ dimensions of grid$/;"	m	struct:__anon18	file:
IM	data05.c	/^  PetscInt	IM, JM, KM; \/\/ dimensions of grid$/;"	m	struct:__anon9	file:
INLET	bcs.c	21;"	d	file:
ISInsideCell	fsi.c	/^PetscTruth ISInsideCell(Cmpnts p, Cmpnts cell[8], PetscReal d[6])$/;"	f
ISInsideTriangle2D	compgeom.c	/^PetscInt ISInsideTriangle2D(Cpt2D p, Cpt2D pa, Cpt2D pb, Cpt2D pc)$/;"	f
ISLineTriangleIntp	compgeom.c	/^PetscTruth ISLineTriangleIntp(Cmpnts p1, Cmpnts p2, IBMNodes *ibm, PetscInt ln_v)$/;"	f
ISPointInTriangle	compgeom.c	/^PetscInt ISPointInTriangle(Cmpnts p, Cmpnts p1, Cmpnts p2, Cmpnts p3,$/;"	f
ISSameSide2D	compgeom.c	/^PetscInt ISSameSide2D(Cpt2D p, Cpt2D p1, Cpt2D p2, Cpt2D p3)$/;"	f
IZet	data.c	/^	Vec 	ICsi, IEta, IZet, IAj;$/;"	m	struct:__anon18	file:
IZet	data05.c	/^  Vec 	ICsi, IEta, IZet, IAj;$/;"	m	struct:__anon9	file:
Iavg	data.c	/^void Iavg(Cmpnts ***x, int xs, int xe, int ys, int ye, int zs, int ze, int mx, int my, int mz)$/;"	f
Iavg	data.c	/^void Iavg(PetscReal ***x, int xs, int xe, int ys, int ye, int zs, int ze, int mx, int my, int mz)$/;"	f
Iavg	data.c	/^void Iavg(float *x, int xs, int xe, int ys, int ye, int zs, int ze, int mx, int my, int mz)$/;"	f
Iavg	data05.c	/^void Iavg(Cmpnts ***x, int xs, int xe, int ys, int ye, int zs, int ze, int mx, int my, int mz)$/;"	f
Iavg	data05.c	/^void Iavg(PetscReal ***x, int xs, int xe, int ys, int ye, int zs, int ze, int mx, int my, int mz)$/;"	f
Iavg	data05.c	/^void Iavg(float *x, int xs, int xe, int ys, int ye, int zs, int ze, int mx, int my, int mz)$/;"	f
ImpRK	implicitsolver.c	/^PetscErrorCode ImpRK(UserCtx *user, IBMNodes *ibm, $/;"	f
ImplicitMomentumSolver	implicitsolver.c	/^PetscErrorCode ImplicitMomentumSolver(UserCtx *user, IBMNodes *ibm,$/;"	f
ImplicitMomentumSolver1	implicitsolver.c	/^PetscErrorCode ImplicitMomentumSolver1(UserCtx *user, IBMNodes *ibm,$/;"	f
ImplicitSmoother	implicitsolver.c	/^PetscErrorCode ImplicitSmoother(UserCtx *user, IBMNodes *ibm, FSInfo *fsi,PetscInt ItrNo)$/;"	f
ImplicitSolverLHSnew03	implicitsolver.c	/^PetscErrorCode ImplicitSolverLHSnew03(UserCtx *user, IBMNodes *ibm, Vec Ucont_i, PetscInt dir, PetscReal alfa)$/;"	f
ImplicitSolverLHSnew04	implicitsolver.c	/^PetscErrorCode ImplicitSolverLHSnew04(UserCtx *user, IBMNodes *ibm, Vec Ucont_i, PetscInt dir, PetscReal alfa)$/;"	f
ImplicitSolverLHSnew05	implicitsolver.c	/^PetscErrorCode ImplicitSolverLHSnew05(UserCtx *user, IBMNodes *ibm, Vec Ucont_i, PetscInt dir)$/;"	f
Implicit_MatrixFree	implicitsolver.c	/^PetscErrorCode Implicit_MatrixFree(UserCtx *user, IBMNodes *ibm, FSInfo *fsi)$/;"	f
InflowFlux	bcs.c	/^PetscErrorCode InflowFlux(UserCtx *user) {$/;"	f
InflowWaveFormRead	bmv.c	/^PetscErrorCode InflowWaveFormRead(UserCtx *user)$/;"	f
InitIBMList	variables.c	/^void InitIBMList(IBMList *ilist) {$/;"	f
Init_Elmt	bmv.c	/^PetscErrorCode Init_Elmt(IBMNodes *ibm, IBMNodes *ibm0, IBMNodes *ibm1)$/;"	f
Init_LevelSet_Vectors	distance.c	/^void Init_LevelSet_Vectors(UserCtx *user)$/;"	f
Init_Levelset_Vectors	level.c	/^void Init_Levelset_Vectors(UserCtx *user)$/;"	f
Initialize_free_surface_location_vector	level.c	/^void Initialize_free_surface_location_vector(UserCtx *user)$/;"	f
Initialize_wave	wave.c	/^void Initialize_wave(UserCtx *user)$/;"	f
Initialize_wind	wave.c	/^void Initialize_wind(UserCtx *user)$/;"	f
InletInterpolation	bcs.c	/^PetscReal InletInterpolation(PetscReal r, UserCtx *user){$/;"	f
InterceptionPoint	ibm.c	/^PetscErrorCode InterceptionPoint(Cmpnts p, PetscInt i, PetscInt j, PetscInt k,$/;"	f
InterceptionPoint2	ibm.c	/^PetscErrorCode InterceptionPoint2(Cmpnts p, PetscInt i, PetscInt j, PetscInt k,$/;"	f
Itpwidth	rotor_model.c	/^int Itpwidth=(int)halfwidth_dfunc+2;$/;"	v
JAj	data.c	/^	Vec 	JCsi, JEta, JZet, JAj;$/;"	m	struct:__anon18	file:
JAj	data05.c	/^  Vec 	JCsi, JEta, JZet, JAj;$/;"	m	struct:__anon9	file:
JCsi	data.c	/^	Vec 	JCsi, JEta, JZet, JAj;$/;"	m	struct:__anon18	file:
JCsi	data05.c	/^  Vec 	JCsi, JEta, JZet, JAj;$/;"	m	struct:__anon9	file:
JEta	data.c	/^	Vec 	JCsi, JEta, JZet, JAj;$/;"	m	struct:__anon18	file:
JEta	data05.c	/^  Vec 	JCsi, JEta, JZet, JAj;$/;"	m	struct:__anon9	file:
JM	data.c	/^	PetscInt	IM, JM, KM; \/\/ dimensions of grid$/;"	m	struct:__anon18	file:
JM	data05.c	/^  PetscInt	IM, JM, KM; \/\/ dimensions of grid$/;"	m	struct:__anon9	file:
JZet	data.c	/^	Vec 	JCsi, JEta, JZet, JAj;$/;"	m	struct:__anon18	file:
JZet	data05.c	/^  Vec 	JCsi, JEta, JZet, JAj;$/;"	m	struct:__anon9	file:
J_ko	k-omega.c	/^Mat J_ko;$/;"	v
Javg	data.c	/^void Javg(float *x, int xs, int xe, int ys, int ye, int zs, int ze, int mx, int my, int mz)$/;"	f
Javg	data05.c	/^void Javg(float *x, int xs, int xe, int ys, int ye, int zs, int ze, int mx, int my, int mz)$/;"	f
KAj	data.c	/^	Vec 	KCsi, KEta, KZet, KAj;$/;"	m	struct:__anon18	file:
KAj	data05.c	/^  Vec 	KCsi, KEta, KZet, KAj;$/;"	m	struct:__anon9	file:
KCsi	data.c	/^	Vec 	KCsi, KEta, KZet, KAj;$/;"	m	struct:__anon18	file:
KCsi	data05.c	/^  Vec 	KCsi, KEta, KZet, KAj;$/;"	m	struct:__anon9	file:
KE_Output	poisson.c	/^PetscErrorCode KE_Output(UserCtx *user)$/;"	f
KEta	data.c	/^	Vec 	KCsi, KEta, KZet, KAj;$/;"	m	struct:__anon18	file:
KEta	data05.c	/^  Vec 	KCsi, KEta, KZet, KAj;$/;"	m	struct:__anon9	file:
KM	data.c	/^	PetscInt	IM, JM, KM; \/\/ dimensions of grid$/;"	m	struct:__anon18	file:
KM	data05.c	/^  PetscInt	IM, JM, KM; \/\/ dimensions of grid$/;"	m	struct:__anon9	file:
KZet	data.c	/^	Vec 	KCsi, KEta, KZet, KAj;$/;"	m	struct:__anon18	file:
KZet	data05.c	/^  Vec 	KCsi, KEta, KZet, KAj;$/;"	m	struct:__anon9	file:
K_Omega_BC	k-omega.c	/^void K_Omega_BC(UserCtx *user)$/;"	f
K_Omega_IC	k-omega.c	/^void K_Omega_IC(UserCtx *user)$/;"	f
K_Omega_Set_Constant	k-omega.c	/^void K_Omega_Set_Constant(UserCtx *user)$/;"	f
Kavg	data.c	/^void Kavg(float *x, int xs, int xe, int ys, int ye, int zs, int ze, int mx, int my, int mz)$/;"	f
Kavg	data05.c	/^void Kavg(float *x, int xs, int xe, int ys, int ye, int zs, int ze, int mx, int my, int mz)$/;"	f
LS_bedConstr	main.c	/^PetscInt LS_bedConstr=1;  \/\/ using least squares for constructing xp, yp, zp $/;"	v
L_dim	main.c	/^PetscReal L_dim;$/;"	v
L_nacelle	main.c	/^PetscReal L_nacelle = 1.0;$/;"	v
Lambda2	data.c	/^PetscErrorCode Lambda2(UserCtx *user)$/;"	f
Lambda2	data05.c	/^PetscErrorCode Lambda2(UserCtx *user)$/;"	f
LevelSet	distance.c	/^Vec	LevelSet,	LevelSet0, LevelSet_o;$/;"	v
LevelSet0	distance.c	/^Vec	LevelSet,	LevelSet0, LevelSet_o;$/;"	v
LevelSet_o	distance.c	/^Vec	LevelSet,	LevelSet0, LevelSet_o;$/;"	v
Levelset_Advect_RHS	level.c	/^void Levelset_Advect_RHS(UserCtx *user, Vec DRHS)$/;"	f
Levelset_BC	level.c	/^void Levelset_BC(UserCtx *user)$/;"	f
Levelset_Function_IC	level.c	/^void Levelset_Function_IC(UserCtx *user)$/;"	f
LinearInterpolation	implicitsolver.c	/^PetscReal LinearInterpolation(PetscReal host[2], PetscReal p, PetscReal val[2])$/;"	f
M	rhs2.c	/^double M(double a, double b)$/;"	f
MAX	data.c	4099;"	d	file:
MAX	data.c	4102;"	d	file:
MAX	data05.c	3768;"	d	file:
MAX	data05.c	3771;"	d	file:
MGDACreate	init.c	/^PetscErrorCode MGDACreate(UserMG *usermg, PetscInt bi)$/;"	f
MG_Finalize	init.c	/^PetscErrorCode MG_Finalize(UserMG *usermg)$/;"	f
MG_Initial	init.c	/^PetscErrorCode MG_Initial(UserMG *usermg, IBMNodes *ibm)$/;"	f
MG_MAXIT	timeadvancing.c	1015;"	d	file:
MHV	main.c	/^PetscInt MHV=0;$/;"	v
MatHYPRE_IJMatrixCopy	poisson_hypre.c	/^void MatHYPRE_IJMatrixCopy(Mat v,HYPRE_IJMatrix &ij)$/;"	f
MaxPosition	poisson.c	/^PetscErrorCode MaxPosition(UserCtx *user, PetscInt pos)$/;"	f
Metrics	data.c	/^} Metrics;$/;"	t	typeref:struct:__anon15	file:
Metrics	data05.c	/^} Metrics;$/;"	t	typeref:struct:__anon6	file:
MgGridInterpolation	implicitsolver.c	/^PetscErrorCode MgGridInterpolation(PetscInt i, PetscInt j, PetscInt k,$/;"	f
MgInterpolationdU_old	implicitsolver.c	/^PetscErrorCode MgInterpolationdU_old(UserCtx *user)$/;"	f
MgRestrictionP	implicitsolver.c	/^PetscErrorCode MgRestrictionP(UserCtx *user,PetscInt flevel)$/;"	f
MoveCylinderTest	main.c	/^PetscInt MoveCylinderTest=0;$/;"	v
MoveFrame	main.c	/^PetscInt MoveFrame = 0;$/;"	v
MyFieldRestriction	timeadvancing.c	/^PetscErrorCode MyFieldRestriction(UserCtx *user)$/;"	f
MyInterpolation	poisson.c	/^PetscErrorCode MyInterpolation(Mat A, Vec X, Vec F)$/;"	f
MyKSPMonitor	poisson.c	/^PetscErrorCode MyKSPMonitor(KSP ksp, PetscInt n, PetscReal rnom, void *dummy)$/;"	f
MyKSPMonitor1	poisson.c	/^PetscErrorCode MyKSPMonitor1(KSP ksp,PetscInt n,PetscReal rnorm,void *dummy)$/;"	f
MyNFaceFinalize	poisson.c	/^PetscErrorCode MyNFaceFinalize(UserMG *usermg)$/;"	f
MyNFaceFine	poisson.c	/^PetscErrorCode MyNFaceFine(UserCtx *user)$/;"	f
MyNFaceInit	poisson.c	/^PetscErrorCode MyNFaceInit(UserMG *usermg)$/;"	f
MyNFaceRestrict	poisson.c	/^PetscErrorCode MyNFaceRestrict(UserCtx *user)$/;"	f
MyNvertRestriction	poisson.c	/^PetscErrorCode MyNvertRestriction(UserCtx *user_h, UserCtx *user_c)$/;"	f
MyRKRHSInterpolation	timeadvancing.c	/^PetscErrorCode MyRKRHSInterpolation(UserCtx *user)$/;"	f
MyRKRHSRestriction	timeadvancing.c	/^PetscErrorCode MyRKRHSRestriction(UserCtx *user)$/;"	f
MyRestriction	poisson.c	/^PetscErrorCode MyRestriction(Mat A, Vec X, Vec F)$/;"	f
MySNESMonitor	implicitsolver.c	/^PetscErrorCode MySNESMonitor(SNES snes,PetscInt n,PetscReal rnorm,void *dummy)$/;"	f
NE	poisson.c	964;"	d	file:
NEWMETRIC	data.c	19;"	d	file:
NEWMETRIC	data05.c	19;"	d	file:
NEWMETRIC	metrics.c	10;"	d	file:
NP	poisson.c	960;"	d	file:
NW	poisson.c	966;"	d	file:
New_wallmodel	main.c	/^PetscInt New_wallmodel;$/;"	v
NumIBPerLoc	main.c	/^PetscInt NumIBPerLoc = 1;$/;"	v
NumNacellePerLoc	main.c	/^PetscInt NumNacellePerLoc = 1;$/;"	v
NumberOfBodies	main.c	/^PetscInt NumberOfBodies=1;$/;"	v
NumberOfIBDelta	main.c	/^PetscInt NumberOfIBDelta=1; \/\/xyang$/;"	v
NumberOfNacelle	main.c	/^PetscInt NumberOfNacelle=1; \/\/xyang$/;"	v
NumberOfTurbines	main.c	/^PetscInt NumberOfTurbines=1; \/\/xyang$/;"	v
Nvert	data.c	/^	Vec	Nvert;$/;"	m	struct:__anon18	file:
Nvert	data05.c	/^  Vec	Nvert;$/;"	m	struct:__anon9	file:
Nvert_o	data.c	/^	Vec	Nvert_o;$/;"	m	struct:__anon18	file:
Nvert_o	data05.c	/^  Vec	Nvert_o;$/;"	m	struct:__anon9	file:
Nx_WT	main.c	/^PetscInt Nx_WT, Ny_WT, Nz_WT;$/;"	v
Ny_WT	main.c	/^PetscInt Nx_WT, Ny_WT, Nz_WT;$/;"	v
Nz_WT	main.c	/^PetscInt Nx_WT, Ny_WT, Nz_WT;$/;"	v
OUTLET	bcs.c	22;"	d	file:
OutflowFlux	bcs.c	/^PetscErrorCode OutflowFlux(UserCtx *user) {$/;"	f
OutflowVelocity	bcs.c	/^PetscErrorCode OutflowVelocity(UserCtx *user, Vec Ucont){ \/\/ this subroutine is not called anywhere$/;"	f
P	data.c	/^	Vec 	P;$/;"	m	struct:__anon18	file:
P	data05.c	/^  Vec 	P;$/;"	m	struct:__anon9	file:
PPM	rhs2.c	/^double PPM(double WW, double W, double E, double EE, double a)$/;"	f
PassiveField	data.c	/^} PassiveField;$/;"	t	typeref:struct:__anon11	file:
PassiveField	data05.c	/^} PassiveField;$/;"	t	typeref:struct:__anon2	file:
Petsc_to_Hypre_Vector	poisson_hypre.c	/^void Petsc_to_Hypre_Vector(Vec A, HYPRE_IJVector &B, int i_lower)$/;"	f
Phi	data.c	/^	Vec	Phi;$/;"	m	struct:__anon18	file:
Phi	data05.c	/^  Vec	Phi;$/;"	m	struct:__anon9	file:
Point	fsi.c	/^struct Point {$/;"	s	file:
Point	fsi.c	/^typedef struct Point Point;$/;"	t	typeref:struct:Point	file:
PoissonLHSNew	poisson.c	/^PetscErrorCode PoissonLHSNew(UserCtx *user, IBMNodes *ibm, IBMInfo *ibminfo)$/;"	f
PoissonNullSpaceFunction	poisson.c	/^PetscErrorCode PoissonNullSpaceFunction(Vec X, void *ctx)$/;"	f
PoissonNullSpaceFunction_original	poisson.c	/^PetscErrorCode PoissonNullSpaceFunction_original(MatNullSpace nsp, Vec X, void *ctx)$/;"	f
PoissonRHS	poisson.c	/^PetscErrorCode PoissonRHS(UserCtx *user, Vec B)$/;"	f
PoissonRHS2	poisson.c	/^PetscErrorCode PoissonRHS2(UserCtx *user, Vec B)$/;"	f
PoissonRHS2_hypre	poisson_hypre.c	/^  void PoissonRHS2_hypre(UserCtx *user, HYPRE_IJVector &B, int i_lower)$/;"	f
PoissonSolver_Hypre	poisson_hypre.c	/^void PoissonSolver_Hypre(UserCtx *user, IBMNodes *ibm, IBMInfo *ibminfo)$/;"	f
PoissonSolver_MG	poisson.c	/^PetscErrorCode PoissonSolver_MG(UserMG *usermg, IBMNodes *ibm, IBMInfo *ibminfo)$/;"	f
PoissonSolver_MG_original	poisson.c	/^PetscErrorCode PoissonSolver_MG_original(UserMG *usermg, IBMNodes *ibm, IBMInfo *ibminfo)$/;"	f
Prandtl_AL	main.c	/^PetscInt Prandtl_AL=0;$/;"	v
Pre_process	rotor_model.c	/^PetscErrorCode Pre_process(UserCtx *user, IBMNodes *ibm, int NumberOfObjects)$/;"	f
Pre_process_save2	rotor_model.c	/^PetscErrorCode Pre_process_save2(UserCtx *user, IBMNodes *ibm, int NumberOfObjects)$/;"	f
Pre_process_save3	rotor_model.c	/^PetscErrorCode Pre_process_save3(UserCtx *user, IBMNodes *ibm, int NumberOfObjects)$/;"	f
Prediction	timeadvancing1.c	/^PetscErrorCode Prediction(UserCtx *user)$/;"	f
Pressure_Gradient	momentum.c	/^void Pressure_Gradient(UserCtx *user, Vec dP)$/;"	f
Projection	poisson.c	/^PetscErrorCode Projection(UserCtx *user)$/;"	f
QCriteria	data.c	/^PetscErrorCode QCriteria(UserCtx *user)$/;"	f
QCriteria	data05.c	/^PetscErrorCode QCriteria(UserCtx *user)$/;"	f
RHS_K_Omega	k-omega.c	/^void RHS_K_Omega(UserCtx *user, Vec KOmega_RHS)$/;"	f
ReadCoordinates	data.c	/^PetscErrorCode ReadCoordinates(UserCtx *user)$/;"	f
ReadCoordinates	data05.c	/^PetscErrorCode ReadCoordinates(UserCtx *user)$/;"	f
Reinit_Levelset	level.c	/^void Reinit_Levelset(UserCtx *user)$/;"	f
Remove_Nullspace	poisson_hypre.c	/^ void Remove_Nullspace(UserCtx *user, HYPRE_IJVector &B, int i_lower)$/;"	f
Remove_Nullspace_Scale	poisson_hypre.c	/^ void Remove_Nullspace_Scale(UserCtx *user, HYPRE_IJVector &B, int i_lower)$/;"	f
RungeKutta	rhs.c	/^PetscErrorCode RungeKutta(UserCtx *user, IBMNodes *ibm, FSInfo *fsi)$/;"	f
SE	poisson.c	965;"	d	file:
SOLIDWALL	bcs.c	23;"	d	file:
SP	poisson.c	961;"	d	file:
STRONG_COUPLING	main.c	/^PetscInt STRONG_COUPLING=0;$/;"	v
SUB	compgeom.c	20;"	d	file:
SW	poisson.c	967;"	d	file:
SYMMETRIC	bcs.c	24;"	d	file:
Scale	momentum.c	/^void Scale ( Cmpnts *A, double a )$/;"	f
Set	momentum.c	/^void Set ( Cmpnts *A, double a )$/;"	f
SetInitialGuessToOne	bcs.c	/^PetscErrorCode SetInitialGuessToOne(UserCtx *user){$/;"	f
SetPressure	fsi.c	/^PetscErrorCode SetPressure(UserCtx *user) $/;"	f
Shear_wm	main.c	/^PetscInt Shear_wm = 1;$/;"	v
Shen1_AL	main.c	/^PetscInt Shen1_AL=0;$/;"	v
Shen_AL	main.c	/^PetscInt Shen_AL=0;$/;"	v
Solve_Distance	distance.c	/^void Solve_Distance(UserCtx	*user, int iter)$/;"	f
Solve_Distance_Explicit	distance.c	/^void Solve_Distance_Explicit(UserCtx *user)$/;"	f
Solve_K_Omega	k-omega.c	/^void Solve_K_Omega(UserCtx *user)$/;"	f
Solve_Reinit_explicit	level.c	/^void Solve_Reinit_explicit(UserCtx *user, int iter)$/;"	f
Solve_Reinit_implicit	level.c	/^void Solve_Reinit_implicit(UserCtx *user, int iter)$/;"	f
Spectral	rhs.c	/^PetscErrorCode Spectral(UserCtx *user)$/;"	f
SpongeDistance	main.c	/^PetscInt SpongeDistance=50;$/;"	v
SpongeLayer	main.c	/^PetscInt SpongeLayer=0;$/;"	v
St_exp	main.c	/^PetscReal St_exp=0.5,wavelength=0.95;$/;"	v
Struc_Solver	solvers.c	/^PetscErrorCode Struc_Solver(UserMG *usermg,IBMNodes *ibm, $/;"	f
Struc_predictor	solvers.c	/^PetscErrorCode Struc_predictor(UserMG *usermg,IBMNodes *ibm, $/;"	f
Subtract_Scale_AddTo	momentum.c	/^void Subtract_Scale_AddTo ( Cmpnts &A, Cmpnts &B, double a, Cmpnts *C) $/;"	f
Subtract_Scale_Set	momentum.c	/^void Subtract_Scale_Set ( Cmpnts &A, Cmpnts &B, double a, Cmpnts *C) $/;"	f
SwingCylinder	fsi_move.c	/^PetscErrorCode SwingCylinder(FSInfo *fsi, IBMNodes *ibm)$/;"	f
Sx_WT	main.c	/^PetscReal Sx_WT=1.0, Sy_WT=1.0, Sz_WT=1.0;$/;"	v
Sy_WT	main.c	/^PetscReal Sx_WT=1.0, Sy_WT=1.0, Sz_WT=1.0;$/;"	v
Sz_WT	main.c	/^PetscReal Sx_WT=1.0, Sy_WT=1.0, Sz_WT=1.0;$/;"	v
TE	poisson.c	972;"	d	file:
TECIOOutQ	data.c	/^PetscErrorCode TECIOOutQ(UserCtx *user, int Q)$/;"	f
TECIOOutQ	data05.c	/^PetscErrorCode TECIOOutQ(UserCtx *user, int Q)$/;"	f
TECIOOut_Averaging	data.c	/^PetscErrorCode TECIOOut_Averaging(UserCtx *user)	\/\/ seokkoo$/;"	f
TECIOOut_Averaging	data.c	/^PetscErrorCode TECIOOut_Averaging(UserCtx *user)$/;"	f
TECIOOut_Averaging	data05.c	/^PetscErrorCode TECIOOut_Averaging(UserCtx *user)	\/\/ seokkoo$/;"	f
TECIOOut_V	data.c	/^PetscErrorCode TECIOOut_V(UserCtx *user, int only_V)	\/\/ seokkoo$/;"	f
TECIOOut_V	data.c	/^PetscErrorCode TECIOOut_V(UserCtx *user, int only_V)$/;"	f
TECIOOut_V	data05.c	/^PetscErrorCode TECIOOut_V(UserCtx *user, int only_V)	\/\/ seokkoo$/;"	f
TN	poisson.c	968;"	d	file:
TP	poisson.c	962;"	d	file:
TS	poisson.c	970;"	d	file:
TW	poisson.c	974;"	d	file:
Trans1DUp_XYZ	rotor_model.c	/^PetscErrorCode Trans1DUp_XYZ(IBMNodes *ibm, FSInfo *fsi, int NumberOfObjects)$/;"	f
TrilinearInterpolation	implicitsolver.c	/^PetscReal TrilinearInterpolation(Cmpnts host[8], Cmpnts p, PetscReal val[8])$/;"	f
TurbineTorqueControl_Input	rotor_model.c	/^PetscErrorCode TurbineTorqueControl_Input(FSInfo *fsi, IBMNodes *ibm)$/;"	f
TurbineTorqueControl_Output	rotor_model.c	/^PetscErrorCode TurbineTorqueControl_Output(FSInfo *fsi, IBMNodes *ibm)$/;"	f
TwoD	main.c	/^PetscInt TwoD = 0;$/;"	v
Ubcs	data.c	/^	Vec	Ubcs; \/\/ An ugly hack, waste of memory$/;"	m	struct:__anon16	file:
Ubcs	data05.c	/^  Vec	Ubcs; \/\/ An ugly hack, waste of memory$/;"	m	struct:__anon7	file:
Ucat	data.c	/^	Vec 	Ucat;	\/\/ Cartesian velocity components$/;"	m	struct:__anon18	file:
Ucat	data05.c	/^  Vec 	Ucat;	\/\/ Cartesian velocity components$/;"	m	struct:__anon9	file:
Ucat_Binary_Output	main.c	/^PetscErrorCode Ucat_Binary_Output(UserCtx *user)$/;"	f
Ucat_cross_sum	data.c	/^	Vec Ucat_cross_sum;		\/\/ uv, vw, wu$/;"	m	struct:__anon18	file:
Ucat_cross_sum	data05.c	/^  Vec Ucat_cross_sum;		\/\/ uv, vw, wu$/;"	m	struct:__anon9	file:
Ucat_o	data.c	/^	Vec	Ucat_o;$/;"	m	struct:__anon18	file:
Ucat_o	data05.c	/^  Vec	Ucat_o;$/;"	m	struct:__anon9	file:
Ucat_square_sum	data.c	/^	Vec Ucat_square_sum;	\/\/ u^2, v^2, w^2$/;"	m	struct:__anon18	file:
Ucat_square_sum	data05.c	/^  Vec Ucat_square_sum;	\/\/ u^2, v^2, w^2$/;"	m	struct:__anon9	file:
Ucat_sum	data.c	/^	Vec Ucat_sum;		\/\/ u, v, w$/;"	m	struct:__anon18	file:
Ucat_sum	data05.c	/^  Vec Ucat_sum;		\/\/ u, v, w$/;"	m	struct:__anon9	file:
Ucont	data.c	/^	Vec 	Ucont;	\/\/ Contravariant velocity components$/;"	m	struct:__anon18	file:
Ucont	data05.c	/^  Vec 	Ucont;	\/\/ Contravariant velocity components$/;"	m	struct:__anon9	file:
Ucont_P_Binary_Input	data.c	/^PetscErrorCode Ucont_P_Binary_Input(UserCtx *user)$/;"	f
Ucont_P_Binary_Input	data05.c	/^PetscErrorCode Ucont_P_Binary_Input(UserCtx *user)$/;"	f
Ucont_P_Binary_Input	main.c	/^PetscErrorCode Ucont_P_Binary_Input(UserCtx *user)$/;"	f
Ucont_P_Binary_Input1	data.c	/^PetscErrorCode Ucont_P_Binary_Input1(UserCtx *user)$/;"	f
Ucont_P_Binary_Input1	data05.c	/^PetscErrorCode Ucont_P_Binary_Input1(UserCtx *user)$/;"	f
Ucont_P_Binary_Input_Averaging	data.c	/^PetscErrorCode Ucont_P_Binary_Input_Averaging(UserCtx *user)$/;"	f
Ucont_P_Binary_Input_Averaging	data05.c	/^PetscErrorCode Ucont_P_Binary_Input_Averaging(UserCtx *user)$/;"	f
Ucont_P_Binary_Output	main.c	/^PetscErrorCode Ucont_P_Binary_Output(UserCtx *user)$/;"	f
UpdatePressure	poisson.c	/^PetscErrorCode UpdatePressure(UserCtx *user)$/;"	f
UpdateXYZ_MoveFrame	rotor_model.c	/^PetscErrorCode UpdateXYZ_MoveFrame(UserCtx *user, IBMNodes *ibm, FSInfo *fsi, int NumberOfObjects)$/;"	f
Update_Velocity_by_Gravity	rhs2.c	/^void Update_Velocity_by_Gravity(UserCtx *user)$/;"	f
Upwind	k-omega.c	/^double Upwind(double W, double E, double a)$/;"	f
Uref_ACL	rotor_model.c	/^PetscErrorCode Uref_ACL(UserCtx *user, IBMNodes *ibm_ACL, IBMNodes *ibm_ACD, FSInfo *fsi_wt, int NumberOfObjects)$/;"	f
UserCtx	data.c	/^} UserCtx;$/;"	t	typeref:struct:__anon18	file:
UserCtx	data05.c	/^} UserCtx;$/;"	t	typeref:struct:__anon9	file:
VecAMinusB	ibm.c	43;"	d	file:
Vec_p	poisson_hypre.c	/^HYPRE_IJVector Vec_p, Vec_p_rhs;$/;"	v
Vec_p_rhs	poisson_hypre.c	/^HYPRE_IJVector Vec_p, Vec_p_rhs;$/;"	v
Vel_wm	main.c	/^PetscInt Vel_wm = 0;$/;"	v
Velocity_Magnitude	data.c	/^PetscErrorCode Velocity_Magnitude(UserCtx *user)	\/\/ store at P$/;"	f
Velocity_Magnitude	data05.c	/^PetscErrorCode Velocity_Magnitude(UserCtx *user)	\/\/ store at P$/;"	f
Viscous	rhs.c	/^PetscErrorCode Viscous(UserCtx *user, Vec Ucont, Vec Ucat, Vec Visc)$/;"	f
VolumeFlux	poisson.c	/^PetscErrorCode VolumeFlux(UserCtx *user, PetscReal *ibm_Flux, PetscReal *ibm_Area, PetscInt flg)$/;"	f
VolumeFlux	poisson.c	/^PetscErrorCode VolumeFlux(UserCtx *user, Vec lUcor, PetscReal *ibm_Flux, PetscReal *ibm_Area)$/;"	f
VtkOutput	data.c	/^PetscErrorCode VtkOutput(UserCtx *user, int only_V)$/;"	f
WAVE_DATA_input	wave.c	/^void WAVE_DATA_input(UserCtx *user)$/;"	f
WAVE_Formfuction2	wave.c	/^void WAVE_Formfuction2(UserCtx *user)$/;"	f
WAVE_SL_Formfuction2	wave.c	/^void WAVE_SL_Formfuction2(UserCtx *user)$/;"	f
WIND_DATA_input	wave.c	/^void WIND_DATA_input(UserCtx *user)$/;"	f
WIND_vel_interpolate	wave.c	/^void WIND_vel_interpolate(UserCtx *user, double *u1, double *v1, double *w1, double x1, double y1, int i, int j)$/;"	f
WP	poisson.c	959;"	d	file:
Weighted_Average	momentum.c	/^void Weighted_Average(double &a1, double &a2, double &a3, double &a4, double &w1, double &w2, double &w3, double &w4, double *A)$/;"	f
X_control	main.c	/^PetscReal X_control = 3;$/;"	v
Zet	data.c	/^	Vec 	Csi, Eta, Zet, Aj;$/;"	m	struct:__anon18	file:
Zet	data05.c	/^  Vec 	Csi, Eta, Zet, Aj;$/;"	m	struct:__anon9	file:
__FUNCT__	data.c	2600;"	d	file:
__FUNCT__	data.c	2601;"	d	file:
__FUNCT__	data05.c	2266;"	d	file:
__FUNCT__	data05.c	2267;"	d	file:
__FUNCT__	main.c	1333;"	d	file:
__FUNCT__	main.c	1334;"	d	file:
_this	data.c	/^	PetscInt _this;$/;"	m	struct:__anon18	file:
_this	data05.c	/^  PetscInt _this;$/;"	m	struct:__anon9	file:
a1	k-omega.c	/^double a1=0.31, beta_star = 0.09, sigma = 0.5, sigma_star = 0.5;$/;"	v
a_iww	main.c	/^PetscReal a_iww, lamda_iww, C_iww;$/;"	v
a_shen	main.c	/^PetscReal a_shen=0.125;$/;"	v
add_fluctuations	main.c	/^PetscInt add_fluctuations = 0;$/;"	v
add_fluctuations_tmprt	main.c	/^PetscInt add_fluctuations_tmprt = 0;$/;"	v
air_flow_levelset	main.c	/^int air_flow_levelset=0;$/;"	v
air_flow_levelset_periodic	main.c	/^int air_flow_levelset_periodic=0;$/;"	v
airfoil_ACL	rotor_model.c	/^PetscErrorCode airfoil_ACL(ACL *acl, IBMNodes *ibm,  FSInfo *fsi)$/;"	f
aj	data.c	/^	PassiveScalar csi[3], eta[3], zet[3], aj;$/;"	m	struct:__anon15	file:
aj	data05.c	/^  PassiveScalar csi[3], eta[3], zet[3], aj;$/;"	m	struct:__anon6	file:
alfa_wm	main.c	/^PetscReal alfa_wm = 0.0;$/;"	v
allocated_levelset	rhs2.c	/^int allocated_levelset=0;$/;"	v
alpha1	k-omega.c	/^double alpha1 = 5.\/9., alpha2 = 0.44;$/;"	v
alpha2	k-omega.c	/^double alpha1 = 5.\/9., alpha2 = 0.44;$/;"	v
amg_agg	main.c	/^int amg_agg=1;$/;"	v
amg_thresh	main.c	/^double amg_thresh=0.75;$/;"	v
angle	data.c	/^PetscReal angle;$/;"	v
angle	data05.c	/^PetscReal angle;$/;"	v
angle	main.c	/^PetscReal	Flux_in = 4.104388e-04, angle = 0;$/;"	v
angle_x0	main.c	/^double angle_x0=0.,angle_y0=0.,angle_z0=0.;$/;"	v
angle_y0	main.c	/^double angle_x0=0.,angle_y0=0.,angle_z0=0.;$/;"	v
angle_z0	main.c	/^double angle_x0=0.,angle_y0=0.,angle_z0=0.;$/;"	v
angularInflowFlag	main.c	/^PetscReal angularInflowFlag=0.0;$/;"	v
angvel	main.c	/^double angvel=3.141592;$/;"	v
area_ibm	rhs2.c	/^double larea_ibm, area_ibm;$/;"	v
averaging	main.c	/^PetscInt averaging=0;$/;"	v
averaging_option	data.c	/^int averaging_option=0;$/;"	v
averaging_option	data05.c	/^int averaging_option=0;$/;"	v
avg	data.c	/^int avg=0, rans=0, rans_output=0, levelset=0;$/;"	v
avg	data05.c	/^int avg=0, rans=0, rans_output=0, levelset=0;$/;"	v
b_shen	main.c	/^PetscReal b_shen=21;$/;"	v
bed_avg	main.c	/^PetscInt bed_avg=200;  \/\/ smooth coefficient for mobile bed. $/;"	v
bed_porosity	main.c	/^PetscReal bed_porosity=0.5; $/;"	v
beta1	k-omega.c	/^double beta1 = 0.075, beta2 = 0.0828;$/;"	v
beta2	k-omega.c	/^double beta1 = 0.075, beta2 = 0.0828;$/;"	v
beta_star	k-omega.c	/^double a1=0.31, beta_star = 0.09, sigma = 0.5, sigma_star = 0.5;$/;"	v
binary_input	data.c	/^int binary_input=0;$/;"	v
binary_input	data05.c	/^int binary_input=0;$/;"	v
binary_input	main.c	/^PetscInt binary_input=0;$/;"	v
block_number	data.c	/^PetscInt ti, block_number, Flux_in;$/;"	v
block_number	data05.c	/^PetscInt ti, block_number, Flux_in;$/;"	v
block_number	main.c	/^PetscInt block_number;$/;"	v
body_alpha_lin_x	main.c	/^double body_alpha_lin_x=0., body_alpha_lin_y=0., body_alpha_lin_z=0.;$/;"	v
body_alpha_lin_y	main.c	/^double body_alpha_lin_x=0., body_alpha_lin_y=0., body_alpha_lin_z=0.;$/;"	v
body_alpha_lin_z	main.c	/^double body_alpha_lin_x=0., body_alpha_lin_y=0., body_alpha_lin_z=0.;$/;"	v
body_alpha_rot_x	main.c	/^double body_alpha_rot_x=0., body_alpha_rot_y=0., body_alpha_rot_z=0.;$/;"	v
body_alpha_rot_y	main.c	/^double body_alpha_rot_x=0., body_alpha_rot_y=0., body_alpha_rot_z=0.;$/;"	v
body_alpha_rot_z	main.c	/^double body_alpha_rot_x=0., body_alpha_rot_y=0., body_alpha_rot_z=0.;$/;"	v
body_beta_lin_x	main.c	/^double body_beta_lin_x=0., body_beta_lin_y=0., body_beta_lin_z=0.;$/;"	v
body_beta_lin_y	main.c	/^double body_beta_lin_x=0., body_beta_lin_y=0., body_beta_lin_z=0.;$/;"	v
body_beta_lin_z	main.c	/^double body_beta_lin_x=0., body_beta_lin_y=0., body_beta_lin_z=0.;$/;"	v
body_beta_rot_x	main.c	/^double body_beta_rot_x=0., body_beta_rot_y=0., body_beta_rot_z=0.;$/;"	v
body_beta_rot_y	main.c	/^double body_beta_rot_x=0., body_beta_rot_y=0., body_beta_rot_z=0.;$/;"	v
body_beta_rot_z	main.c	/^double body_beta_rot_x=0., body_beta_rot_y=0., body_beta_rot_z=0.;$/;"	v
body_inertia_x	main.c	/^double body_inertia_x=0., body_inertia_y=0., body_inertia_z=0.;$/;"	v
body_inertia_y	main.c	/^double body_inertia_x=0., body_inertia_y=0., body_inertia_z=0.;$/;"	v
body_inertia_z	main.c	/^double body_inertia_x=0., body_inertia_y=0., body_inertia_z=0.;$/;"	v
body_mass	main.c	/^double body_mass=0.;$/;"	v
c0_CL	main.c	/^PetscReal c0_CL=1;$/;"	v
c1_CH	main.c	/^PetscReal c1_CH=2.2;$/;"	v
c2_CH	main.c	/^PetscReal c2_CH=1;$/;"	v
c3_CH	main.c	/^PetscReal c3_CH=4;$/;"	v
c_shen	main.c	/^PetscReal c_shen=0.1;$/;"	v
central	main.c	/^PetscInt central=0, second_order=0;$/;"	v
cf_radialforce_AL	main.c	/^PetscReal cf_radialforce_AL=0.1;$/;"	v
channel_height	main.c	/^double channel_height=1.0;$/;"	v
checkInside	fsi.c	/^int checkInside(Point poly[], int n, Point p) {$/;"	f
clark	main.c	/^int clark=0;$/;"	v
cop	main.c	/^PetscInt cop=0, regime=1; \/\/ 1 escape regime --- 2 cruise regime$/;"	v
correction3D_CH	main.c	/^PetscInt correction3D_CH=0;$/;"	v
correction3D_CL	main.c	/^PetscInt correction3D_CL=0;$/;"	v
correction_ALShen1	main.c	/^PetscReal correction_ALShen1=1;$/;"	v
count_AL	main.c	/^PetscReal count_AL;$/;"	v
cross_diffusion	main.c	/^PetscInt cross_diffusion=1;$/;"	v
cs	data.c	/^int cs=0;$/;"	v
cs	data05.c	/^int cs=0;$/;"	v
csi	data.c	/^	PassiveScalar csi[3], eta[3], zet[3], aj;$/;"	m	struct:__anon15	file:
csi	data05.c	/^  PassiveScalar csi[3], eta[3], zet[3], aj;$/;"	m	struct:__anon6	file:
dH	level.c	/^double dH (double p, double dx)$/;"	f
da	data.c	/^	DA da;	\/* Data structure for scalars (include the grid geometry$/;"	m	struct:__anon18	file:
da	data05.c	/^  DA da;	\/* Data structure for scalars (include the grid geometry$/;"	m	struct:__anon9	file:
delete_count	main.c	/^int delete_count=0;$/;"	v
delete_previous_file	main.c	/^int delete_previous_file=0;$/;"	v
deltab	main.c	/^PetscReal deltab=0.01;$/;"	v
deltafunc	main.c	/^PetscInt deltafunc = 10;$/;"	v
deltafunc_test	rotor_model.c	/^PetscErrorCode deltafunc_test( ) $/;"	f
destroy	variables.c	/^void destroy(LIST *ilist)$/;"	f
detmnt	ibm.c	/^PetscReal detmnt(PetscReal a[3][3])$/;"	f
df_Cabot	wallfunction.c	/^double df_Cabot(double nu, double u, double y, double utau, double dpdn)$/;"	f
df_Cabot_roughness	wallfunction.c	/^double df_Cabot_roughness(double nu, double u, double y, double utau, double dpdn, double ks)$/;"	f
df_Werner	wallfunction.c	/^double df_Werner(double nu, double u, double y, double utau)$/;"	f
df_loglaw_roughness	wallfunction.c	/^double df_loglaw_roughness(double nu, double u, double y, double utau, double ks)$/;"	f
dfunc_2h	rotor_model.c	/^double dfunc_2h(double r)$/;"	f
dfunc_2hs1	rotor_model.c	/^double dfunc_2hs1(double r)$/;"	f
dfunc_2hs2	rotor_model.c	/^double dfunc_2hs2(double r)$/;"	f
dfunc_2hs3	rotor_model.c	/^double dfunc_2hs3(double r)$/;"	f
dfunc_2hs4	rotor_model.c	/^double dfunc_2hs4(double r)$/;"	f
dfunc_2hs5	rotor_model.c	/^double dfunc_2hs5(double r)$/;"	f
dfunc_2hs6	rotor_model.c	/^double dfunc_2hs6(double r)$/;"	f
dfunc_4h	rotor_model.c	/^double dfunc_4h(double r)$/;"	f
dfunc_4h2peak	rotor_model.c	/^double dfunc_4h2peak(double r)$/;"	f
dfunc_4hs1	rotor_model.c	/^double dfunc_4hs1(double r)$/;"	f
dfunc_4htail	rotor_model.c	/^double dfunc_4htail(double r)$/;"	f
dfunc_4uniform	rotor_model.c	/^double dfunc_4uniform(double r)$/;"	f
dfunc_6uniform	rotor_model.c	/^double dfunc_6uniform(double r)$/;"	f
dfunc_exp	rotor_model.c	/^double dfunc_exp(double r, double n)$/;"	f
dfunc_h	rotor_model.c	/^double dfunc_h(double r)$/;"	f
dfunc_nh	rotor_model.c	/^double dfunc_nh(double r, double n)$/;"	f
dfunc_nhs1	rotor_model.c	/^double dfunc_nhs1(double r, double n)$/;"	f
dfunc_nhs2	rotor_model.c	/^double dfunc_nhs2(double r, double n)$/;"	f
dfunc_s3h	rotor_model.c	/^double dfunc_s3h(double r)$/;"	f
dfunc_s4h	rotor_model.c	/^double dfunc_s4h(double r)$/;"	f
dfunc_sc4h	rotor_model.c	/^double dfunc_sc4h(double r)$/;"	f
dfunc_wd	main.c	/^PetscReal dfunc_wd=2.0;$/;"	v
dgf_ax	main.c	/^PetscInt dgf_az=0,dgf_ay=0,dgf_ax=0 ;$/;"	v
dgf_ay	main.c	/^PetscInt dgf_az=0,dgf_ay=0,dgf_ax=0 ;$/;"	v
dgf_az	main.c	/^PetscInt dgf_az=0,dgf_ay=0,dgf_ax=0 ;$/;"	v
dgf_x	main.c	/^PetscInt dgf_z=0,dgf_y=0,dgf_x=0;$/;"	v
dgf_y	main.c	/^PetscInt dgf_z=0,dgf_y=0,dgf_x=0;$/;"	v
dgf_z	main.c	/^PetscInt dgf_z=0,dgf_y=0,dgf_x=0;$/;"	v
dh1_wm	main.c	/^PetscReal dh1_wm = 0.001; \/\/ the first off-wall grid spacing for wall model 4-11-2011$/;"	v
dh_nacelle	main.c	/^PetscReal dh_nacelle = 1.0;$/;"	v
dhi_fixed	main.c	/^PetscReal dhi_fixed, dhj_fixed, dhk_fixed;$/;"	v
dhj_fixed	main.c	/^PetscReal dhi_fixed, dhj_fixed, dhk_fixed;$/;"	v
dhk_fixed	main.c	/^PetscReal dhi_fixed, dhj_fixed, dhk_fixed;$/;"	v
dhratio_wm	main.c	/^PetscReal dhratio_wm = 1.05; \/\/ the ratio of grid spacing in wall model $/;"	v
di_max	main.c	/^double di_max, dj_max, dk_max;$/;"	v
di_min	main.c	/^double dx_min, di_min, dj_min, dk_min;$/;"	v
direction	fsi.c	/^int direction(Point a, Point b, Point c) {$/;"	f
disk_read_ucd	rotor_model.c	/^PetscErrorCode disk_read_ucd(IBMNodes *ibm, int ibi, FSInfo *fsi, int OneDmZ, char fname[80], double reflength)$/;"	f
dist	level.c	/^double dist(Cmpnts &a, Cmpnts &b)$/;"	f
distance	fsi.c	/^PetscErrorCode distance(Cmpnts p1, Cmpnts p2, Cmpnts p3, Cmpnts p4, Cmpnts p, PetscReal *d)$/;"	f
dj_max	main.c	/^double di_max, dj_max, dk_max;$/;"	v
dj_min	main.c	/^double dx_min, di_min, dj_min, dk_min;$/;"	v
dk_max	main.c	/^double di_max, dj_max, dk_max;$/;"	v
dk_min	main.c	/^double dx_min, di_min, dj_min, dk_min;$/;"	v
dp_wm	main.c	/^PetscInt dp_wm = 0;$/;"	v
dpdz_set	main.c	/^PetscTruth dpdz_set=PETSC_FALSE;$/;"	v
dt	data.c	/^	PetscReal	dt; 	\/\/ time step$/;"	m	struct:__anon18	file:
dt	data05.c	/^  PetscReal	dt; 	\/\/ time step$/;"	m	struct:__anon9	file:
dt_bed	main.c	/^PetscReal dt_bed=1;  \/\/ for every dt_bed flow time steps, bed is computed once. $/;"	v
dt_inflow	main.c	/^double dt_inflow;$/;"	v
dtau	distance.c	/^double dtau;$/;"	v
dtau_levelset	level.c	/^double dtau_levelset;$/;"	v
dthick	main.c	/^double dthick=1.5;$/;"	v
dthick_set	main.c	/^PetscTruth dthick_set=PETSC_FALSE;$/;"	v
dx_min	main.c	/^double dx_min, di_min, dj_min, dk_min;$/;"	v
dymmatch_wm	main.c	/^int dymmatch_wm = 1; \/\/ xyang$/;"	v
dynamic_freq	main.c	/^int dynamic_freq=1;$/;"	v
eigen_decomposition	data.c	/^void eigen_decomposition(double A[n][n], double V[n][n], double d[n]) {$/;"	f
eigen_decomposition	data05.c	/^void eigen_decomposition(double A[n][n], double V[n][n], double d[n]) {$/;"	f
eno2	level.c	/^double eno2(double f0, double f1, double f2, double f3, double a)$/;"	f
epscos	momentum.c	/^double epscos (double x, double eps)$/;"	f
eta	data.c	/^	PassiveScalar csi[3], eta[3], zet[3], aj;$/;"	m	struct:__anon15	file:
eta	data05.c	/^  PassiveScalar csi[3], eta[3], zet[3], aj;$/;"	m	struct:__anon6	file:
export_FS_elev	main.c	/^PetscInt export_FS_elev=0;$/;"	v
export_FS_elev_center	main.c	/^PetscInt export_FS_elev_center=0;$/;"	v
f	data.c	/^	PetscReal t, f;$/;"	m	struct:__anon10	file:
f	data05.c	/^  PetscReal t, f;$/;"	m	struct:__anon1	file:
f_Cabot	wallfunction.c	/^double f_Cabot(double nu, double u, double y, double utau, double dpdn)$/;"	f
f_Cabot_roughness	wallfunction.c	/^double f_Cabot_roughness(double nu, double u, double y, double utau, double dpdn, double ks)$/;"	f
f_Werner	wallfunction.c	/^double f_Werner(double nu, double u, double y, double utau)$/;"	f
f_loglaw_roughness	wallfunction.c	/^double f_loglaw_roughness(double nu, double u, double y, double utau, double ks)$/;"	f
fall_cyll_case	main.c	/^PetscInt fall_cyll_case=0;$/;"	v
fda	data.c	/^	DA fda, fda2;	\/\/ Data Structure for vectors$/;"	m	struct:__anon18	file:
fda	data05.c	/^  DA fda, fda2;	\/\/ Data Structure for vectors$/;"	m	struct:__anon9	file:
fda2	data.c	/^	DA fda, fda2;	\/\/ Data Structure for vectors$/;"	m	struct:__anon18	file:
fda2	data05.c	/^  DA fda, fda2;	\/\/ Data Structure for vectors$/;"	m	struct:__anon9	file:
file_exist	data.c	/^int file_exist(char *str)$/;"	f
file_exist	data05.c	/^int file_exist(char *str)$/;"	f
file_exist	main.c	/^int file_exist(char *str)$/;"	f
find_utau_Cabot	wallfunction.c	/^double find_utau_Cabot(double nu, double u, double y, double guess, double dpdn)$/;"	f
find_utau_Cabot_roughness	wallfunction.c	/^double find_utau_Cabot_roughness(double nu, double u, double y, double guess, double dpdn, double ks)$/;"	f
find_utau_Werner	wallfunction.c	/^double find_utau_Werner(double nu, double u, double y, double guess)$/;"	f
find_utau_loglaw_roughness	wallfunction.c	/^double find_utau_loglaw_roughness(double nu, double u, double y, double guess, double ks)$/;"	f
fish	main.c	/^PetscInt fish=0;$/;"	v
fix_inlet	main.c	/^int fix_outlet=0, fix_inlet=0;$/;"	v
fix_level	main.c	/^int fix_level=0;$/;"	v
fix_outlet	main.c	/^int fix_outlet=0, fix_inlet=0;$/;"	v
fixturbineangvel	main.c	/^PetscInt fixturbineangvel=0;$/;"	v
fixturbinegeneratortorque	main.c	/^PetscInt fixturbinegeneratortorque=0;$/;"	v
flagprint	ibm.c	/^PetscInt flagprint = 0;$/;"	v
floating_turbine_case	main.c	/^int floating_turbine_case=0;$/;"	v
fluxin	bcs.c	/^PetscErrorCode fluxin(UserCtx *user){$/;"	f
force_ibm	rhs2.c	/^double lforce_ibm, force_ibm;$/;"	v
forceavgperiod_AL	main.c	/^PetscInt forceavgperiod_AL = 1;  \/\/ force averaing period $/;"	v
forced_motion	main.c	/^PetscInt forced_motion=0;$/;"	v
forcewidthfixed	main.c	/^PetscInt forcewidthfixed = 0; \/\/ fix the width for force distribution$/;"	v
fractional_Max_IT	main.c	/^PetscInt fractional_Max_IT = 1; $/;"	v
free_surafe_BC	rhs2.c	/^void free_surafe_BC(UserCtx *user)$/;"	f
freeslip	wallfunction.c	/^void freeslip (UserCtx *user, double sc, double sb, Cmpnts Ua, Cmpnts Uc, Cmpnts *Ub, double nx, double ny, double nz)$/;"	f
freesurface	main.c	/^PetscInt freesurface=0;$/;"	v
freesurface_wallmodel	main.c	/^int freesurface_wallmodel=0;$/;"	v
fsi_2nd_InterceptionPoint	fsi.c	/^PetscErrorCode fsi_2nd_InterceptionPoint(Cmpnts p, Cmpnts pc[8], $/;"	f
fsi_2nd_InterceptionPoint2	fsi.c	/^PetscErrorCode fsi_2nd_InterceptionPoint2(Cmpnts p, Cmpnts pc[8], $/;"	f
fsi_3rd_InterceptionPoint	fsi.c	/^PetscErrorCode fsi_3rd_InterceptionPoint(Cmpnts p, Cmpnts pc[8], $/;"	f
fsi_6dof	main.c	/^int fsi_6dof=0;$/;"	v
fsi_InterceptionPoint	fsi.c	/^PetscErrorCode fsi_InterceptionPoint(Cmpnts p, Cmpnts pc[8], $/;"	f
fsi_InterceptionPoint2	fsi.c	/^PetscErrorCode fsi_InterceptionPoint2(Cmpnts p, Cmpnts pc[8], $/;"	f
fsi_interpolation_coeff	fsi.c	/^PetscErrorCode fsi_interpolation_coeff(UserCtx *user, IBMNodes *ibm, IBMInfo *ibminfo,SurfElmtInfo *elmtinfo, FSInfo *fsi)$/;"	f
fsi_interpolation_coeff2	fsi.c	/^PetscErrorCode fsi_interpolation_coeff2(UserCtx *user, IBMNodes *ibm, IBMInfo *ibminfo,SurfElmtInfo *elmtinfo, FSInfo *fsi)$/;"	f
fsi_interpolation_coeff3	fsi.c	/^PetscErrorCode fsi_interpolation_coeff3(UserCtx *user, IBMNodes *ibm, IBMInfo *ibminfo,SurfElmtInfo *elmtinfo, FSInfo *fsi)$/;"	f
fsi_interpolation_coeff4	fsi.c	/^PetscErrorCode fsi_interpolation_coeff4(UserCtx *user, IBMNodes *ibm, IBMInfo *ibminfo,SurfElmtInfo *elmtinfo, FSInfo *fsi)$/;"	f
fsi_interpolation_coeff_fsi	fsi.c	/^PetscErrorCode fsi_interpolation_coeff_fsi(UserCtx *user, IBMNodes *ibm, FSInfo *fsi)$/;"	f
fsi_ptr	main.c	/^FSInfo        *fsi_ptr;$/;"	v
get_weight	les.c	/^void get_weight ( int i, int j, int k, int mx, int my, int mz, PetscReal ***aj, PetscReal ***nvert, PetscReal nv, double weight[3][3][3])$/;"	f
gravity_x	main.c	/^double gravity_x=0, gravity_y=0, gravity_z=0;$/;"	v
gravity_y	main.c	/^double gravity_x=0, gravity_y=0, gravity_z=0;$/;"	v
gravity_z	main.c	/^double gravity_x=0, gravity_y=0, gravity_z=0;$/;"	v
gridfile	main.c	/^char path[256], gridfile[256];$/;"	v
halfwidth_dfunc	main.c	/^PetscReal halfwidth_dfunc = 4.0;$/;"	v
help	data.c	/^static char help[] = "Testing programming!";$/;"	v	file:
help	data05.c	/^static char help[] = "Testing programming!";$/;"	v	file:
help	main.c	/^static char help[] = "Testing programming!";$/;"	v	file:
hypot2	data.c	/^static double hypot2(double x, double y) {$/;"	f	file:
hypot2	data05.c	/^static double hypot2(double x, double y) {$/;"	f	file:
i_average	data.c	/^int i_average=0;$/;"	v
i_average	data05.c	/^int i_average=0;$/;"	v
i_begin	data.c	/^int i_begin, i_end;$/;"	v
i_begin	data05.c	/^int i_begin, i_end;$/;"	v
i_end	data.c	/^int i_begin, i_end;$/;"	v
i_end	data05.c	/^int i_begin, i_end;$/;"	v
i_homo_filter	main.c	/^int i_homo_filter=0;$/;"	v
i_periodic	data.c	/^int i_periodic=0;$/;"	v
i_periodic	data05.c	/^int i_periodic=0;$/;"	v
i_periodic	main.c	/^int i_periodic=0;$/;"	v
i_periodicIB	main.c	/^PetscInt i_periodicIB = 0, j_periodicIB = 0, k_periodicIB = 0;$/;"	v
i_proc	main.c	/^int i_proc=PETSC_DECIDE, j_proc=PETSC_DECIDE, k_proc=PETSC_DECIDE;$/;"	v
ib_bctype	main.c	/^int ib_bctype[128];$/;"	v
ibm_Surf_stress	fsi.c	/^PetscErrorCode ibm_Surf_stress(UserCtx *user, IBMNodes *ibm, SurfElmtInfo *elmtinfo, PetscInt ibi)$/;"	f
ibm_interpolation_advanced	ibm.c	/^PetscErrorCode ibm_interpolation_advanced(UserCtx *user)$/;"	f
ibm_interpolation_advanced_fsi	ibm.c	/^PetscErrorCode ibm_interpolation_advanced_fsi(UserCtx *user)$/;"	f
ibm_interpolation_advanced_printPressure	ibm.c	/^PetscErrorCode  ibm_interpolation_advanced_printPressure(UserCtx *user)$/;"	f
ibm_ptr	main.c	/^IBMNodes	*ibm_ptr;$/;"	v
ibm_read	data.c	/^PetscErrorCode ibm_read(IBMNodes *ibm)$/;"	f
ibm_read	data05.c	/^PetscErrorCode ibm_read(IBMNodes *ibm)$/;"	f
ibm_read	ibm_io.c	/^PetscErrorCode ibm_read(IBMNodes *ibm1, IBMNodes *ibm2)$/;"	f
ibm_read_ucd	data.c	/^PetscErrorCode ibm_read_ucd(IBMNodes *ibm)$/;"	f
ibm_read_ucd	data05.c	/^PetscErrorCode ibm_read_ucd(IBMNodes *ibm)$/;"	f
ibm_read_ucd	ibm_io.c	/^PetscErrorCode ibm_read_ucd(IBMNodes *ibm, PetscInt ibi)$/;"	f
ibm_read_ucd_old	ibm_io.c	/^PetscErrorCode ibm_read_ucd_old(IBMNodes *ibm)$/;"	f
ibm_search	main.c	/^int ibm_search=0;$/;"	v
ibm_search_advanced	ibm.c	/^PetscErrorCode ibm_search_advanced(UserCtx *user, IBMNodes *ibm, $/;"	f
ibm_search_advanced_rev	ibm.c	/^PetscErrorCode ibm_search_advanced_rev(UserCtx *user, IBMNodes *ibm, $/;"	f
ibm_surface_out	ibm_io.c	/^PetscErrorCode ibm_surface_out(IBMNodes *ibm, PetscInt ti,$/;"	f
ibm_surface_out_with_pressure	fsi_move.c	/^PetscErrorCode ibm_surface_out_with_pressure(IBMNodes *ibm, PetscInt ibi)$/;"	f
ii_periodic	main.c	/^int ii_periodic=0;$/;"	v
ii_periodicWT	main.c	/^PetscInt ii_periodicWT=0, jj_periodicWT=0, kk_periodicWT=0; \/\/ periodic WT, a row\/column of ghost wind turbines needs to be added$/;"	v
ik_average	data.c	/^int ik_average=0;$/;"	v
ik_average	data05.c	/^int ik_average=0;$/;"	v
ikc_average	data.c	/^int ikc_average=0;	\/\/ conditional spatial averaging in ik directions (channel flow)$/;"	v
ikc_average	data05.c	/^int ikc_average=0;	\/\/ conditional spatial averaging in ik directions (channel flow)$/;"	v
imax_wm	main.c	/^PetscInt imin_wm=0, imax_wm=0, jmin_wm=0, jmax_wm=0, kmin_wm=0, kmax_wm=0;$/;"	v
imax_wmtmprt	main.c	/^PetscInt imin_wmtmprt=0, imax_wmtmprt=0, jmin_wmtmprt=0, jmax_wmtmprt=0, kmin_wmtmprt=0, kmax_wmtmprt=0;$/;"	v
imin_wm	main.c	/^PetscInt imin_wm=0, imax_wm=0, jmin_wm=0, jmax_wm=0, kmin_wm=0, kmax_wm=0;$/;"	v
imin_wmtmprt	main.c	/^PetscInt imin_wmtmprt=0, imax_wmtmprt=0, jmin_wmtmprt=0, jmax_wmtmprt=0, kmin_wmtmprt=0, kmax_wmtmprt=0;$/;"	v
immersed	main.c	/^PetscInt immersed = 0;$/;"	v
imp_MAX_IT	main.c	/^PetscInt imp_MAX_IT = 50; $/;"	v
imp_atol	main.c	/^PetscReal imp_atol=1e-7, imp_rtol=1e-4, imp_stol=1.e-8;$/;"	v
imp_free_tol	main.c	/^double imp_free_tol=1.e-4;$/;"	v
imp_rtol	main.c	/^PetscReal imp_atol=1e-7, imp_rtol=1e-4, imp_stol=1.e-8;$/;"	v
imp_stol	main.c	/^PetscReal imp_atol=1e-7, imp_rtol=1e-4, imp_stol=1.e-8;$/;"	v
implicit	main.c	/^PetscInt implicit = 0;$/;"	v
indf_ax	main.c	/^PetscReal indf_ax = 0.25; \/\/ xyang 12-16-2010$/;"	v
infRe	main.c	/^PetscInt infRe = 0;$/;"	v
inflow	data.c	/^	FlowWave *inflow, *kinematics;$/;"	m	struct:__anon18	file:
inflow	data05.c	/^  FlowWave *inflow, *kinematics;$/;"	m	struct:__anon9	file:
inflow_levelset	main.c	/^PetscInt inflow_levelset=0;$/;"	v
inflow_recycle_perioid	main.c	/^int inflow_recycle_perioid=20000;$/;"	v
info	data.c	/^	DALocalInfo info;$/;"	m	struct:__anon18	file:
info	data05.c	/^  DALocalInfo info;$/;"	m	struct:__anon9	file:
initial_guess_for_snes	implicitsolver.c	/^void initial_guess_for_snes(UserCtx *user, Vec U)$/;"	f
initial_perturbation	main.c	/^int initial_perturbation=0;$/;"	v
initlist	variables.c	/^void initlist(LIST *ilist) {$/;"	f
inletArea_y	bcs.c	/^double inletArea_y=0;$/;"	v
inletArea_z	bcs.c	/^double inletArea_z=0;$/;"	v
inlet_buffer_k	main.c	/^PetscInt inlet_buffer_k=1;$/;"	v
inlet_flux	main.c	/^double inlet_flux=-1;$/;"	v
inlet_y	main.c	/^double inlet_y=0, outlet_y=0;$/;"	v
inlet_y_flag	main.c	/^PetscTruth	inlet_y_flag=PETSC_FALSE;$/;"	v
inlet_z	main.c	/^double inlet_z=0, outlet_z=0;$/;"	v
inlet_z_flag	main.c	/^PetscTruth	inlet_z_flag=PETSC_FALSE;$/;"	v
inletprofile	main.c	/^PetscInt inletprofile=1;$/;"	v
insertnode	variables.c	/^void insertnode(LIST *ilist, PetscInt Node)$/;"	f
integrate_F	wallfunction.c	/^double integrate_F (double nu, double utau, double yb)$/;"	f
integrate_F	wallfunction.c	/^double integrate_F(double nu, double utau, double yb, double ks)$/;"	f
integrate_gridfilter	rhs2.c	/^double integrate_gridfilter(double val[3][3][3], double vol[3][3][3])$/;"	f
integrate_gridfilter_1d	rhs2.c	/^double integrate_gridfilter_1d(double val[3], double vol[3])$/;"	f
integrate_testfilter	rhs2.c	/^double integrate_testfilter(double val[3][3][3], double w[3][3][3])$/;"	f
integrate_testfilter_ik	rhs2.c	/^double integrate_testfilter_ik(double val[3][3][3], double vol[3][3][3])$/;"	f
integrate_testfilter_simpson	rhs2.c	/^double integrate_testfilter_simpson(double val[3][3][3], double w[3][3][3])$/;"	f
integration_buffer	wallfunction.c	/^double *integration_buffer;$/;"	v
interval_yp	wallfunction.c	/^int interval_yp=2;$/;"	v
intsect_triangle	compgeom.c	/^PetscInt intsect_triangle(PetscReal orig[3], PetscReal dir[3],$/;"	f
inviscid	main.c	/^PetscInt inviscid = 0;$/;"	v
isIntersect	fsi.c	/^int isIntersect(line l1, line l2) {$/;"	f
j_area	bcs.c	/^double j_area;$/;"	v
j_average	data.c	/^int j_average=0;$/;"	v
j_average	data05.c	/^int j_average=0;$/;"	v
j_begin	data.c	/^int j_begin, j_end;$/;"	v
j_begin	data05.c	/^int j_begin, j_end;$/;"	v
j_end	data.c	/^int j_begin, j_end;$/;"	v
j_end	data05.c	/^int j_begin, j_end;$/;"	v
j_homo_filter	main.c	/^int j_homo_filter=0;$/;"	v
j_periodic	data.c	/^int j_periodic=0;$/;"	v
j_periodic	data05.c	/^int j_periodic=0;$/;"	v
j_periodic	main.c	/^int j_periodic=0;$/;"	v
j_periodicIB	main.c	/^PetscInt i_periodicIB = 0, j_periodicIB = 0, k_periodicIB = 0;$/;"	v
j_proc	main.c	/^int i_proc=PETSC_DECIDE, j_proc=PETSC_DECIDE, k_proc=PETSC_DECIDE;$/;"	v
jj_periodic	main.c	/^int jj_periodic=0;$/;"	v
jj_periodicWT	main.c	/^PetscInt ii_periodicWT=0, jj_periodicWT=0, kk_periodicWT=0; \/\/ periodic WT, a row\/column of ghost wind turbines needs to be added$/;"	v
jmax_wm	main.c	/^PetscInt imin_wm=0, imax_wm=0, jmin_wm=0, jmax_wm=0, kmin_wm=0, kmax_wm=0;$/;"	v
jmax_wmtmprt	main.c	/^PetscInt imin_wmtmprt=0, imax_wmtmprt=0, jmin_wmtmprt=0, jmax_wmtmprt=0, kmin_wmtmprt=0, kmax_wmtmprt=0;$/;"	v
jmin_wm	main.c	/^PetscInt imin_wm=0, imax_wm=0, jmin_wm=0, jmax_wm=0, kmin_wm=0, kmax_wm=0;$/;"	v
jmin_wmtmprt	main.c	/^PetscInt imin_wmtmprt=0, imax_wmtmprt=0, jmin_wmtmprt=0, jmax_wmtmprt=0, kmin_wmtmprt=0, kmax_wmtmprt=0;$/;"	v
k_area	bcs.c	/^double k_area;$/;"	v
k_area_allocated	bcs.c	/^int k_area_allocated=0;$/;"	v
k_average	data.c	/^int k_average=0;$/;"	v
k_average	data05.c	/^int k_average=0;$/;"	v
k_begin	data.c	/^int k_begin, k_end;$/;"	v
k_begin	data05.c	/^int k_begin, k_end;$/;"	v
k_end	data.c	/^int k_begin, k_end;$/;"	v
k_end	data05.c	/^int k_begin, k_end;$/;"	v
k_homo_filter	main.c	/^int k_homo_filter=0;$/;"	v
k_periodic	data.c	/^int k_periodic=0;$/;"	v
k_periodic	data05.c	/^int k_periodic=0;$/;"	v
k_periodic	main.c	/^int k_periodic=0;$/;"	v
k_periodicIB	main.c	/^PetscInt i_periodicIB = 0, j_periodicIB = 0, k_periodicIB = 0;$/;"	v
k_proc	main.c	/^int i_proc=PETSC_DECIDE, j_proc=PETSC_DECIDE, k_proc=PETSC_DECIDE;$/;"	v
kappa	wallfunction.c	/^double kappa=0.41, B=5.5;$/;"	v
kinematics	data.c	/^	FlowWave *inflow, *kinematics;$/;"	m	struct:__anon18	file:
kinematics	data05.c	/^  FlowWave *inflow, *kinematics;$/;"	m	struct:__anon9	file:
kk_periodic	data.c	/^int kk_periodic=0;$/;"	v
kk_periodic	data05.c	/^int kk_periodic=0;$/;"	v
kk_periodic	main.c	/^int kk_periodic=0;$/;"	v
kk_periodicWT	main.c	/^PetscInt ii_periodicWT=0, jj_periodicWT=0, kk_periodicWT=0; \/\/ periodic WT, a row\/column of ghost wind turbines needs to be added$/;"	v
kmax_wm	main.c	/^PetscInt imin_wm=0, imax_wm=0, jmin_wm=0, jmax_wm=0, kmin_wm=0, kmax_wm=0;$/;"	v
kmax_wmtmprt	main.c	/^PetscInt imin_wmtmprt=0, imax_wmtmprt=0, jmin_wmtmprt=0, jmax_wmtmprt=0, kmin_wmtmprt=0, kmax_wmtmprt=0;$/;"	v
kmin_wm	main.c	/^PetscInt imin_wm=0, imax_wm=0, jmin_wm=0, jmax_wm=0, kmin_wm=0, kmax_wm=0;$/;"	v
kmin_wmtmprt	main.c	/^PetscInt imin_wmtmprt=0, imax_wmtmprt=0, jmin_wmtmprt=0, jmax_wmtmprt=0, kmin_wmtmprt=0, kmax_wmtmprt=0;$/;"	v
ksp_amg	poisson.c	/^KSP ksp_amg[100];$/;"	v
lAj	data.c	/^	Vec	lCsi, lEta, lZet, lAj;$/;"	m	struct:__anon18	file:
lAj	data05.c	/^  Vec	lCsi, lEta, lZet, lAj;$/;"	m	struct:__anon9	file:
lCent	data.c	/^	Vec	lCent;$/;"	m	struct:__anon18	file:
lCent	data05.c	/^  Vec	lCent;$/;"	m	struct:__anon9	file:
lCsi	data.c	/^	Vec	lCsi, lEta, lZet, lAj;$/;"	m	struct:__anon18	file:
lCsi	data05.c	/^  Vec	lCsi, lEta, lZet, lAj;$/;"	m	struct:__anon9	file:
lEta	data.c	/^	Vec	lCsi, lEta, lZet, lAj;$/;"	m	struct:__anon18	file:
lEta	data05.c	/^  Vec	lCsi, lEta, lZet, lAj;$/;"	m	struct:__anon9	file:
lGridSpace	data.c	/^	Vec	lGridSpace;$/;"	m	struct:__anon18	file:
lGridSpace	data05.c	/^  Vec	lGridSpace;$/;"	m	struct:__anon9	file:
lIAj	data.c	/^	Vec	lICsi, lIEta, lIZet, lIAj;$/;"	m	struct:__anon18	file:
lIAj	data05.c	/^  Vec	lICsi, lIEta, lIZet, lIAj;$/;"	m	struct:__anon9	file:
lICsi	data.c	/^	Vec	lICsi, lIEta, lIZet, lIAj;$/;"	m	struct:__anon18	file:
lICsi	data05.c	/^  Vec	lICsi, lIEta, lIZet, lIAj;$/;"	m	struct:__anon9	file:
lIEta	data.c	/^	Vec	lICsi, lIEta, lIZet, lIAj;$/;"	m	struct:__anon18	file:
lIEta	data05.c	/^  Vec	lICsi, lIEta, lIZet, lIAj;$/;"	m	struct:__anon9	file:
lIZet	data.c	/^	Vec	lICsi, lIEta, lIZet, lIAj;$/;"	m	struct:__anon18	file:
lIZet	data05.c	/^  Vec	lICsi, lIEta, lIZet, lIAj;$/;"	m	struct:__anon9	file:
lJAj	data.c	/^	Vec	lJCsi, lJEta, lJZet, lJAj;$/;"	m	struct:__anon18	file:
lJAj	data05.c	/^  Vec	lJCsi, lJEta, lJZet, lJAj;$/;"	m	struct:__anon9	file:
lJCsi	data.c	/^	Vec	lJCsi, lJEta, lJZet, lJAj;$/;"	m	struct:__anon18	file:
lJCsi	data05.c	/^  Vec	lJCsi, lJEta, lJZet, lJAj;$/;"	m	struct:__anon9	file:
lJEta	data.c	/^	Vec	lJCsi, lJEta, lJZet, lJAj;$/;"	m	struct:__anon18	file:
lJEta	data05.c	/^  Vec	lJCsi, lJEta, lJZet, lJAj;$/;"	m	struct:__anon9	file:
lJZet	data.c	/^	Vec	lJCsi, lJEta, lJZet, lJAj;$/;"	m	struct:__anon18	file:
lJZet	data05.c	/^  Vec	lJCsi, lJEta, lJZet, lJAj;$/;"	m	struct:__anon9	file:
lKAj	data.c	/^	Vec	lKCsi, lKEta, lKZet, lKAj;$/;"	m	struct:__anon18	file:
lKAj	data05.c	/^  Vec	lKCsi, lKEta, lKZet, lKAj;$/;"	m	struct:__anon9	file:
lKCsi	data.c	/^	Vec	lKCsi, lKEta, lKZet, lKAj;$/;"	m	struct:__anon18	file:
lKCsi	data05.c	/^  Vec	lKCsi, lKEta, lKZet, lKAj;$/;"	m	struct:__anon9	file:
lKEta	data.c	/^	Vec	lKCsi, lKEta, lKZet, lKAj;$/;"	m	struct:__anon18	file:
lKEta	data05.c	/^  Vec	lKCsi, lKEta, lKZet, lKAj;$/;"	m	struct:__anon9	file:
lKZet	data.c	/^	Vec	lKCsi, lKEta, lKZet, lKAj;$/;"	m	struct:__anon18	file:
lKZet	data05.c	/^  Vec	lKCsi, lKEta, lKZet, lKAj;$/;"	m	struct:__anon9	file:
lNvert	data.c	/^	Vec	lNvert, lNvert_o;$/;"	m	struct:__anon18	file:
lNvert	data05.c	/^  Vec	lNvert, lNvert_o;$/;"	m	struct:__anon9	file:
lNvert_o	data.c	/^	Vec	lNvert, lNvert_o;$/;"	m	struct:__anon18	file:
lNvert_o	data05.c	/^  Vec	lNvert, lNvert_o;$/;"	m	struct:__anon9	file:
lP	data.c	/^	Vec	lUcont, lUcat, lP, lPhi;$/;"	m	struct:__anon18	file:
lP	data05.c	/^  Vec	lUcont, lUcat, lP, lPhi;$/;"	m	struct:__anon9	file:
lPhi	data.c	/^	Vec	lUcont, lUcat, lP, lPhi;$/;"	m	struct:__anon18	file:
lPhi	data05.c	/^  Vec	lUcont, lUcat, lP, lPhi;$/;"	m	struct:__anon9	file:
lUcat	data.c	/^	Vec	lUcont, lUcat, lP, lPhi;$/;"	m	struct:__anon18	file:
lUcat	data05.c	/^  Vec	lUcont, lUcat, lP, lPhi;$/;"	m	struct:__anon9	file:
lUcont	data.c	/^	Vec	lUcont, lUcat, lP, lPhi;$/;"	m	struct:__anon18	file:
lUcont	data05.c	/^  Vec	lUcont, lUcat, lP, lPhi;$/;"	m	struct:__anon9	file:
lZet	data.c	/^	Vec	lCsi, lEta, lZet, lAj;$/;"	m	struct:__anon18	file:
lZet	data05.c	/^  Vec	lCsi, lEta, lZet, lAj;$/;"	m	struct:__anon9	file:
lamda_iww	main.c	/^PetscReal a_iww, lamda_iww, C_iww;$/;"	v
laplacian	main.c	/^int laplacian=0;$/;"	v
larea_ibm	rhs2.c	/^double larea_ibm, area_ibm;$/;"	v
les	main.c	/^PetscInt les=0;$/;"	v
les_eps	les.c	/^const double les_eps=1.e-4;\/\/ osl 1.e-7$/;"	v
les_eps	main.c	/^double les_eps=1.e-7;$/;"	v
les_prt	main.c	/^PetscInt les_prt = 0;$/;"	v
level_in	main.c	/^int level_in=0;$/;"	v
level_in_height	main.c	/^double level_in_height=0.;	$/;"	v
levelset	data.c	/^int avg=0, rans=0, rans_output=0, levelset=0;$/;"	v
levelset	data05.c	/^int avg=0, rans=0, rans_output=0, levelset=0;$/;"	v
levelset	main.c	/^int levelset=0;$/;"	v
levelset_it	main.c	/^int levelset_it=10;$/;"	v
levelset_solve2	main.c	/^int levelset_solve2=0;$/;"	v
levelset_tau	main.c	/^double levelset_tau=0.01;$/;"	v
levelset_weno	main.c	/^int levelset_weno=0;$/;"	v
lforce_ibm	rhs2.c	/^double lforce_ibm, force_ibm;$/;"	v
lidx	poisson.c	/^PetscInt lidx(PetscInt i, PetscInt j, PetscInt k, UserCtx *user)$/;"	f
lidx2	poisson.c	19;"	d	file:
limiter	rhs2.c	/^double limiter(double r)	\/\/ van Albada$/;"	f
line	fsi.c	/^struct line {$/;"	s	file:
line	fsi.c	/^typedef struct line line;$/;"	t	typeref:struct:line	file:
linear_intp	fsi.c	/^PetscErrorCode linear_intp(Cpt2D p, Cpt2D p1, Cpt2D p2, $/;"	f
linear_intpp	fsi.c	/^PetscErrorCode linear_intpp(Cpt2D p, Cpt2D p1, Cpt2D p2, $/;"	f
loc_refvel	main.c	/^PetscReal loc_refvel = 1;$/;"	v
localstep	main.c	/^int localstep=1;$/;"	v
lowRe	main.c	/^PetscInt rans=0, lowRe=0;$/;"	v
main	data.c	/^int main(int argc, char **argv)$/;"	f
main	data05.c	/^int main(int argc, char **argv)$/;"	f
main	main.c	/^int main(int argc, char **argv)$/;"	f
max	fsi.c	29;"	d	file:
max_angle	main.c	/^PetscReal max_angle = -54.*3.1415926\/180.;\/\/ for MHV; min=0$/;"	v
max_cs	main.c	/^PetscReal max_cs=0.5;$/;"	v
max_yp	wallfunction.c	/^int max_yp=1e6;$/;"	v
mean	level.c	/^double mean ( double A, double B )$/;"	f
mean_pressure_gradient	main.c	/^double mean_pressure_gradient=0;	\/\/ relative tolerance$/;"	v
mg_MAX_IT	main.c	/^PetscInt  mg_MAX_IT=30, mg_idx=1, mg_preItr=1, mg_poItr=1;$/;"	v
mg_idx	main.c	/^PetscInt  mg_MAX_IT=30, mg_idx=1, mg_preItr=1, mg_poItr=1;$/;"	v
mg_poItr	main.c	/^PetscInt  mg_MAX_IT=30, mg_idx=1, mg_preItr=1, mg_poItr=1;$/;"	v
mg_preItr	main.c	/^PetscInt  mg_MAX_IT=30, mg_idx=1, mg_preItr=1, mg_poItr=1;$/;"	v
min	fsi.c	30;"	d	file:
minmod	level.c	/^double minmod(double m1, double m2)	\/\/ for UNO$/;"	f
mixed	main.c	/^int mixed=0;$/;"	v
mod_sign	level.c	/^double mod_sign(double d0, double grad0, double e)$/;"	f
movefsi	main.c	/^PetscInt movefsi = 0, rotatefsi=0;$/;"	v
mu_air	main.c	/^double mu_water=1.e-3, mu_air=1.78e-5;$/;"	v
mu_water	main.c	/^double mu_water=1.e-3, mu_air=1.78e-5;$/;"	v
my_rank	main.c	/^int my_rank;$/;"	v
mymatmultadd	poisson.c	/^PetscErrorCode mymatmultadd(Mat mat, Vec v1, Vec v2, Vec v3)$/;"	f
n	data.c	4104;"	d	file:
n	data05.c	3773;"	d	file:
n_elmt	data.c	/^	PetscInt	n_v, n_elmt;	\/\/ number of vertices and number of elements$/;"	m	struct:__anon17	file:
n_elmt	data05.c	/^  PetscInt	n_v, n_elmt;	\/\/ number of vertices and number of elements$/;"	m	struct:__anon8	file:
n_v	data.c	/^	PetscInt	n_v, n_elmt;	\/\/ number of vertices and number of elements$/;"	m	struct:__anon17	file:
n_v	data05.c	/^  PetscInt	n_v, n_elmt;	\/\/ number of vertices and number of elements$/;"	m	struct:__anon8	file:
n_yp	wallfunction.c	/^int n_yp=0;$/;"	v
nacelle_model	main.c	/^PetscInt nacelle_model = 0;  $/;"	v
nbnumber	data.c	/^	PetscInt	nbnumber;$/;"	m	struct:__anon17	file:
nbnumber	data05.c	/^  PetscInt	nbnumber;$/;"	m	struct:__anon8	file:
nearestcell	ibm.c	/^PetscErrorCode nearestcell(Cmpnts p, IBMNodes *ibm, IBMInfo *ibminfo)$/;"	f
nearestcell1	ibm.c	/^PetscErrorCode nearestcell1(Cmpnts p, IBMNodes *ibm, IBMInfo *ibminfo)$/;"	f
nf_x	data.c	/^	PetscReal	*nf_x, *nf_y, *nf_z;	\/\/ Normal direction$/;"	m	struct:__anon17	file:
nf_x	data05.c	/^  PetscReal	*nf_x, *nf_y, *nf_z;	\/\/ Normal direction$/;"	m	struct:__anon8	file:
nf_y	data.c	/^	PetscReal	*nf_x, *nf_y, *nf_z;	\/\/ Normal direction$/;"	m	struct:__anon17	file:
nf_y	data05.c	/^  PetscReal	*nf_x, *nf_y, *nf_z;	\/\/ Normal direction$/;"	m	struct:__anon8	file:
nf_z	data.c	/^	PetscReal	*nf_x, *nf_y, *nf_z;	\/\/ Normal direction$/;"	m	struct:__anon17	file:
nf_z	data05.c	/^  PetscReal	*nf_x, *nf_y, *nf_z;	\/\/ Normal direction$/;"	m	struct:__anon8	file:
nfree	rhs2.c	/^int nfree(PetscReal ***nvert, int k, int j, int i)$/;"	f
noslip	wallfunction.c	/^void noslip (UserCtx *user, double sc, double sb, Cmpnts Ua, Cmpnts Uc, Cmpnts *Ub, PetscReal *ustar, double nx, double ny, double nz)$/;"	f
nsave_points	main.c	/^int nsave_points=0;$/;"	v
nu_t	wallfunction.c	/^double nu_t(double yplus)\/\/ in fact, nu_t\/nu$/;"	f
num_blade	main.c	/^PetscInt num_blade = 3; \/\/ xyang 1-21-2011$/;"	v
num_foiltype	main.c	/^PetscInt num_foiltype = 2; \/\/ The number of airfoil types used in the blade xyang 03-18-2011$/;"	v
number_flowwave	data.c	/^	PetscInt number_flowwave, number_kinematics;$/;"	m	struct:__anon18	file:
number_flowwave	data05.c	/^  PetscInt number_flowwave, number_kinematics;$/;"	m	struct:__anon9	file:
number_kinematics	data.c	/^	PetscInt number_flowwave, number_kinematics;$/;"	m	struct:__anon18	file:
number_kinematics	data05.c	/^  PetscInt number_flowwave, number_kinematics;$/;"	m	struct:__anon9	file:
number_smooth	main.c	/^PetscInt number_smooth=2;$/;"	v
nv1	data.c	/^	PetscInt	*nv1, *nv2, *nv3;	\/\/ Node index of each triangle$/;"	m	struct:__anon17	file:
nv1	data05.c	/^  PetscInt	*nv1, *nv2, *nv3;	\/\/ Node index of each triangle$/;"	m	struct:__anon8	file:
nv2	data.c	/^	PetscInt	*nv1, *nv2, *nv3;	\/\/ Node index of each triangle$/;"	m	struct:__anon17	file:
nv2	data05.c	/^  PetscInt	*nv1, *nv2, *nv3;	\/\/ Node index of each triangle$/;"	m	struct:__anon8	file:
nv3	data.c	/^	PetscInt	*nv1, *nv2, *nv3;	\/\/ Node index of each triangle$/;"	m	struct:__anon17	file:
nv3	data05.c	/^  PetscInt	*nv1, *nv2, *nv3;	\/\/ Node index of each triangle$/;"	m	struct:__anon8	file:
nv_once	data.c	/^int nv_once=0;$/;"	v
nv_once	data05.c	/^int nv_once=0;$/;"	v
nvert	data.c	/^	PetscInt	*nvert;\/\/ody property$/;"	m	struct:__anon18	file:
nvert	data05.c	/^  PetscInt	*nvert;\/\/ody property$/;"	m	struct:__anon9	file:
onLine	fsi.c	/^int onLine(line l1, Point p) {        \/\/check whether p is on the line or not$/;"	f
onlyV	data.c	/^int onlyV=0;$/;"	v
onlyV	data05.c	/^int onlyV=0;$/;"	v
outflow_scale	bcs.c	/^int outflow_scale=1;$/;"	v
outlet_y	main.c	/^double inlet_y=0, outlet_y=0;$/;"	v
outlet_z	main.c	/^double inlet_z=0, outlet_z=0;$/;"	v
p	data.c	/^	PassiveScalar u, v, w, p;$/;"	m	struct:__anon11	file:
p	data05.c	/^  PassiveScalar u, v, w, p;$/;"	m	struct:__anon2	file:
p1	fsi.c	/^   Point p1, p2;$/;"	m	struct:line	file:
p2	fsi.c	/^   Point p1, p2;$/;"	m	struct:line	file:
par_Ap	poisson_hypre.c	/^HYPRE_ParCSRMatrix par_Ap;$/;"	v
par_Vec_p	poisson_hypre.c	/^HYPRE_ParVector par_Vec_p, par_Vec_p_rhs;$/;"	v
par_Vec_p_rhs	poisson_hypre.c	/^HYPRE_ParVector par_Vec_p, par_Vec_p_rhs;$/;"	v
particle_D50	main.c	/^PetscReal particle_D50=0.0018;  \/\/ for every dt_bed flow time steps, bed is computed once. $/;"	v
particle_dens	main.c	/^PetscReal particle_dens=1992.0;  \/\/ for every dt_bed flow time steps, bed is computed once. $/;"	v
particlevel_model	main.c	/^PetscInt particlevel_model=0;  \/\/ model for parivle velocity. $/;"	v
path	main.c	/^char path[256], gridfile[256];$/;"	v
path_inflow	main.c	/^char path_inflow[256];$/;"	v
pcg_solver_p	poisson_hypre.c	/^HYPRE_Solver pcg_solver_p, precon_p;$/;"	v
pcr	data.c	/^int pcr=0;$/;"	v
pcr	data05.c	/^int pcr=0;$/;"	v
percent_weno	main.c	/^PetscReal percent_weno = 0.0; \/\/ xyang 12-16-2010$/;"	v
periodic	main.c	/^int periodic=0;$/;"	v
pi	data.c	/^int pi=-1, pk=-1;$/;"	v
pi	data05.c	/^int pi=-1, pk=-1;$/;"	v
pk	data.c	/^int pi=-1, pk=-1;$/;"	v
pk	data05.c	/^int pi=-1, pk=-1;$/;"	v
point_cell_advanced	ibm.c	/^PetscInt point_cell_advanced(Cmpnts p, PetscInt ip, PetscInt jp, PetscInt kp,$/;"	f
point_cell_thin	ibm.c	/^PetscInt point_cell_thin(Cmpnts p,Cmpnts p1,Cmpnts p2,Cmpnts p3,Cmpnts p4,$/;"	f
poisson	main.c	/^int poisson=1;$/;"	v
poisson_it	main.c	/^int poisson_it=10;$/;"	v
poisson_threshold	main.c	/^PetscReal poisson_threshold = 0.1; \/\/ xiaolei test$/;"	v
poisson_tol	main.c	/^double poisson_tol=5.e-9;	\/\/ relative tolerance$/;"	v
powerlawwallmodel	main.c	/^PetscInt powerlawwallmodel=0;$/;"	v
pre_integrate	wallfunction.c	/^void pre_integrate ()$/;"	f
pre_integrate_flag	wallfunction.c	/^int pre_integrate_flag=0;$/;"	v
precon_p	poisson_hypre.c	/^HYPRE_Solver pcg_solver_p, precon_p;$/;"	v
prefix	data.c	/^char prefix[256];$/;"	v
prefix	data05.c	/^char prefix[256];$/;"	v
prescribed_rotation	main.c	/^PetscInt prescribed_rotation=1;$/;"	v
prt_eps	main.c	/^PetscReal prt_eps=1.e-20;$/;"	v
pseudo_periodic	main.c	/^int pseudo_periodic=0;$/;"	v
pseudo_periodic_BC	bcs.c	/^void pseudo_periodic_BC(UserCtx *user){$/;"	f
qcr	main.c	/^int qcr=0;$/;"	v
r	data.c	/^	PetscReal	r[101], tin[101], uinr[101][1001];$/;"	m	struct:__anon18	file:
r	data05.c	/^  PetscReal	r[101], tin[101], uinr[101][1001];$/;"	m	struct:__anon9	file:
r_ko	k-omega.c	/^Vec r_ko;$/;"	v
r_nacelle	main.c	/^PetscReal r_nacelle = 0.0;$/;"	v
radi	main.c	/^PetscInt radi=10;$/;"	v
radialforce_AL	main.c	/^PetscInt radialforce_AL=0;$/;"	v
randomdirection	ibm.c	/^PetscErrorCode randomdirection(Cmpnts p, PetscInt ip, PetscInt jp,$/;"	f
rans	data.c	/^int avg=0, rans=0, rans_output=0, levelset=0;$/;"	v
rans	data05.c	/^int avg=0, rans=0, rans_output=0, levelset=0;$/;"	v
rans	main.c	/^PetscInt rans=0, lowRe=0;$/;"	v
rans_output	data.c	/^int avg=0, rans=0, rans_output=0, levelset=0;$/;"	v
rans_output	data05.c	/^int avg=0, rans=0, rans_output=0, levelset=0;$/;"	v
read_inflow_section	rhs2.c	/^void read_inflow_section(UserCtx *user)$/;"	f
refAL_Rot	rotor_model.c	/^PetscErrorCode refAL_Rot(FSInfo *FSinfo, IBMNodes *ibm, IBMNodes *ibm_ref, int ibi)$/;"	f
refangle_AL	main.c	/^PetscReal refangle_AL=20;$/;"	v
reflength_IBDelta	main.c	/^PetscReal reflength_IBDelta = 1.0; $/;"	v
reflength_nacelle	main.c	/^PetscReal reflength_nacelle = 1.0;  $/;"	v
reflength_wt	main.c	/^PetscReal reflength_wt = 1.0;  $/;"	v
refvel_cfd	main.c	/^PetscReal refvel_cfd = 1.0;  $/;"	v
refvel_wt	main.c	/^PetscReal refvel_wt = 1.0;  $/;"	v
regime	main.c	/^PetscInt cop=0, regime=1; \/\/ 1 escape regime --- 2 cruise regime$/;"	v
relax_AL	main.c	/^PetscReal relax_AL=1;$/;"	v
ren	data.c	/^	PetscReal	ren;	\/\/ Reynolds number$/;"	m	struct:__anon18	file:
ren	data05.c	/^  PetscReal	ren;	\/\/ Reynolds number$/;"	m	struct:__anon9	file:
reynolds	data.c	/^int reynolds=0;	\/\/ 1: contravariant reynolds stress$/;"	v
reynolds	data05.c	/^int reynolds=0;	\/\/ 1: contravariant reynolds stress$/;"	v
rho_air	main.c	/^double rho_water=1., rho_air=0.001;	\/\/ sloshing$/;"	v
rho_water	main.c	/^double rho_water=1., rho_air=0.001;	\/\/ sloshing$/;"	v
rotate_IBdelta	main.c	/^PetscInt rotate_IBdelta = 0;  $/;"	v
rotate_nacelle	main.c	/^PetscInt rotate_nacelle = 0;  $/;"	v
rotate_xyz	fsi_move.c	/^void rotate_xyz (double ti, double dt, double angvel, double x_c, double y_c, double z_c, double x_bp0, double y_bp0, double z_bp0, double *x_bp, double *y_bp, double *z_bp, double *rot_angle)$/;"	f
rotate_xyz6dof	fsi_move.c	/^void rotate_xyz6dof (double ti, double dt, double angvel1, double angvel2, double angvel3, double x_c, double y_c, double z_c, double x_bp0, double y_bp0, double z_bp0, double *x_bp, double *y_bp, double *z_bp, double *rot_angle)$/;"	f
rotatefsi	main.c	/^PetscInt movefsi = 0, rotatefsi=0;$/;"	v
rotdir	main.c	/^int rotdir=2; \/\/ 0: rotate around the x-axis, 1:y-axis, 2:z-axis$/;"	v
rotor_Rot	rotor_model.c	/^PetscErrorCode rotor_Rot(FSInfo *FSinfo, IBMNodes *ibm, PetscReal dt, int ibi, char fname[80], int dimension)$/;"	f
rotor_Rot_6dof_fsi	rotor_model.c	/^PetscErrorCode rotor_Rot_6dof_fsi(FSInfo *FSinfoPlat, FSInfo *FSinfo, IBMNodes *ibm, PetscReal dt, int ibi, char fname[80], int dimension)$/;"	f
rotor_model	main.c	/^PetscInt rotor_model = 0;  \/\/ xyang 12-7-2010 1: actuator disk model 2, 3: actuator line model$/;"	v
rough_set	main.c	/^PetscTruth rough_set=PETSC_FALSE;$/;"	v
roughness_size	main.c	/^double roughness_size=0.0;$/;"	v
rs_bed	main.c	/^PetscReal rs_bed=1;$/;"	v
rstart_flg	main.c	/^PetscTruth	rstart_flg=PETSC_FALSE;$/;"	v
rstart_fsi	main.c	/^PetscInt rstart_fsi=0;$/;"	v
rstart_turbinerotation	main.c	/^PetscInt rstart_turbinerotation=0;$/;"	v
save_inflow	main.c	/^int save_inflow=0;$/;"	v
save_inflow_minus	main.c	/^int save_inflow_minus=0;$/;"	v
save_inflow_period	main.c	/^int save_inflow_period=100;$/;"	v
save_inflow_section	rhs2.c	/^void save_inflow_section(UserCtx *user)$/;"	f
save_memory	main.c	/^int save_memory=1;$/;"	v
save_point	main.c	/^int save_point[3000][10];$/;"	v
sb_bed	main.c	/^PetscReal sb_bed=0.01; $/;"	v
scale_velocity	main.c	/^PetscReal scale_velocity=1;$/;"	v
second_order	main.c	/^PetscInt central=0, second_order=0;$/;"	v
setup_lidx2	poisson.c	/^PetscInt setup_lidx2(UserCtx *user)$/;"	f
setup_lidx3	poisson.c	/^PetscInt setup_lidx3(UserCtx *user)	\/\/ with component, 1,2,3, for momentum$/;"	f
shear	data.c	/^int shear=0;$/;"	v
shear	data05.c	/^int shear=0;$/;"	v
sigma	k-omega.c	/^double a1=0.31, beta_star = 0.09, sigma = 0.5, sigma_star = 0.5;$/;"	v
sigma_k1	k-omega.c	/^const double sigma_k1 = 0.85, sigma_k2 = 1.0;$/;"	v
sigma_k2	k-omega.c	/^const double sigma_k1 = 0.85, sigma_k2 = 1.0;$/;"	v
sigma_o1	k-omega.c	/^const double sigma_o1 = 0.50, sigma_o2 = 0.856;$/;"	v
sigma_o2	k-omega.c	/^const double sigma_o1 = 0.50, sigma_o2 = 0.856;$/;"	v
sigma_star	k-omega.c	/^double a1=0.31, beta_star = 0.09, sigma = 0.5, sigma_star = 0.5;$/;"	v
sign	wallfunction.c	/^double sign(double a)$/;"	f
sign1	level.c	/^double sign1(double a, double dx)$/;"	f
skew	main.c	/^int skew=0;$/;"	v
slipbody	main.c	/^PetscInt slipbody=-1000;$/;"	v
sloshing	main.c	/^PetscInt sloshing=0;$/;"	v
sloshing_a	main.c	/^double sloshing_a=0.05, sloshing_b=2, sloshing_d=1;$/;"	v
sloshing_b	main.c	/^double sloshing_a=0.05, sloshing_b=2, sloshing_d=1;$/;"	v
sloshing_d	main.c	/^double sloshing_a=0.05, sloshing_b=2, sloshing_d=1;$/;"	v
smooth_bed	main.c	/^PetscInt smooth_bed=200;  \/\/ smooth coefficient for mobile bed. $/;"	v
smoothforce_AL	main.c	/^PetscInt smoothforce_AL=0;$/;"	v
smoothlevel	main.c	/^PetscReal smoothlevel=0;$/;"	v
snes_created	implicitsolver.c	/^int snes_created=0;$/;"	v
snes_ko_created	k-omega.c	/^int snes_ko_created=0;$/;"	v
snes_two_eq	k-omega.c	/^SNES snes_two_eq;$/;"	v
solid	k-omega.c	/^double solid=0.1;$/;"	v
st	data.c	/^	PetscReal	st;	\/\/ Strouhal number$/;"	m	struct:__anon18	file:
st	data05.c	/^  PetscReal	st;	\/\/ Strouhal number$/;"	m	struct:__anon9	file:
std	rotor_model.c	/^using namespace std;$/;"	v
sublevel	main.c	/^PetscInt sublevel=0;$/;"	v
surface_p_out	main.c	/^PetscInt surface_p_out = 0; \/\/xyang$/;"	v
surface_tension	main.c	/^PetscInt surface_tension=0;$/;"	v
t	data.c	/^	PetscReal t, f;$/;"	m	struct:__anon10	file:
t	data05.c	/^  PetscReal t, f;$/;"	m	struct:__anon1	file:
temperature	main.c	/^PetscInt temperature = 0; $/;"	v
temperature_rotormodel	main.c	/^PetscInt temperature_rotormodel = 0; \/\/ scalar source\/sink on the blades$/;"	v
testfilter_1d	main.c	/^int testfilter_1d=0;$/;"	v
testfilter_ik	main.c	/^int testfilter_ik=0;$/;"	v
thin	main.c	/^PetscInt thin=0;$/;"	v
threshold	bcs.c	/^double threshold=0.1;$/;"	v
ti	data.c	/^PetscInt ti, block_number, Flux_in;$/;"	v
ti	data05.c	/^PetscInt ti, block_number, Flux_in;$/;"	v
ti	main.c	/^PetscInt ti,tistart=0;$/;"	v
ti_lastsave	main.c	/^int ti_lastsave=0;$/;"	v
tie	data.c	/^PetscInt tis, tie, tsteps=5;$/;"	v
tie	data05.c	/^PetscInt tis, tie, tsteps=5;$/;"	v
tiend_ufield	main.c	/^int tiout_ufield = -1, tiend_ufield = 10000000;$/;"	v
time_coeff	poisson.c	/^double time_coeff()$/;"	f
tin	data.c	/^	PetscReal	r[101], tin[101], uinr[101][1001];$/;"	m	struct:__anon18	file:
tin	data05.c	/^  PetscReal	r[101], tin[101], uinr[101][1001];$/;"	m	struct:__anon9	file:
tiout	main.c	/^PetscInt tiout = 10;$/;"	v
tiout_ufield	main.c	/^int tiout_ufield = -1, tiend_ufield = 10000000;$/;"	v
tipspeedratio	main.c	/^PetscReal tipspeedratio = 4.1;$/;"	v
tis	data.c	/^PetscInt tis, tie, tsteps=5;$/;"	v
tis	data05.c	/^PetscInt tis, tie, tsteps=5;$/;"	v
tistart	main.c	/^PetscInt ti,tistart=0;$/;"	v
tisteps	main.c	/^PetscInt tisteps;$/;"	v
tmprt_initval	main.c	/^PetscReal tmprt_initval=0.; \/\/ the initial value for temperature field $/;"	v
tql2	data.c	/^static void tql2(double V[n][n], double d[n], double e[n]) {$/;"	f	file:
tql2	data05.c	/^static void tql2(double V[n][n], double d[n], double e[n]) {$/;"	f	file:
tred2	data.c	/^static void tred2(double V[n][n], double d[n], double e[n]) {$/;"	f	file:
tred2	data05.c	/^static void tred2(double V[n][n], double d[n], double e[n]) {$/;"	f	file:
tri_area	compgeom.c	/^double tri_area(double x1, double y1, double z1, $/;"	f
triangle_2nd_intp_fsi	fsi.c	/^PetscErrorCode triangle_2nd_intp_fsi(Cpt2D p, Cpt2D p1, Cpt2D p2, Cpt2D p3, $/;"	f
triangle_2nd_intp_fsi2	fsi.c	/^PetscErrorCode triangle_2nd_intp_fsi2(Cpt2D p, Cpt2D p1, Cpt2D p2, Cpt2D p3, $/;"	f
triangle_3rd_intp_fsi	fsi.c	/^PetscErrorCode triangle_3rd_intp_fsi(Cpt2D p, Cpt2D p1, Cpt2D p2, Cpt2D p3, $/;"	f
triangle_intp	compgeom.c	/^PetscErrorCode triangle_intp(Cpt2D p, Cpt2D p1, Cpt2D p2, Cpt2D p3, $/;"	f
triangle_intp2	compgeom.c	/^PetscErrorCode triangle_intp2(Cpt2D p, Cpt2D p1, Cpt2D p2, Cpt2D p3, $/;"	f
triangle_intp2_fsi	fsi.c	/^PetscErrorCode triangle_intp2_fsi(Cpt2D p, Cpt2D p1, Cpt2D p2, Cpt2D p3, $/;"	f
triangle_intp3D	compgeom.c	/^PetscErrorCode triangle_intp3D(double x, double y, double z, $/;"	f
triangle_intp_fsi	fsi.c	/^PetscErrorCode triangle_intp_fsi(Cpt2D p, Cpt2D p1, Cpt2D p2, Cpt2D p3, $/;"	f
triangle_intpp	compgeom.c	/^PetscErrorCode triangle_intpp(Cpt2D p, Cpt2D p1, Cpt2D p2, Cpt2D p3, $/;"	f
triangle_intpp2_fsi	fsi.c	/^PetscErrorCode triangle_intpp2_fsi(Cpt2D p, Cpt2D p1, Cpt2D p2, Cpt2D p3, $/;"	f
triangle_intpp_fsi	fsi.c	/^PetscErrorCode triangle_intpp_fsi(Cpt2D p, Cpt2D p1, Cpt2D p2, Cpt2D p3, $/;"	f
tsteps	data.c	/^PetscInt tis, tie, tsteps=5;$/;"	v
tsteps	data05.c	/^PetscInt tis, tie, tsteps=5;$/;"	v
turbine_6dof_fsi_motion	main.c	/^PetscInt turbine_6dof_fsi_motion=0;$/;"	v
turbine_prescrived_motion	main.c	/^PetscInt turbine_prescrived_motion=0, turbine_prescrived_motion_heave=0, turbine_prescrived_motion_pitch=0;$/;"	v
turbine_prescrived_motion_heave	main.c	/^PetscInt turbine_prescrived_motion=0, turbine_prescrived_motion_heave=0, turbine_prescrived_motion_pitch=0;$/;"	v
turbine_prescrived_motion_pitch	main.c	/^PetscInt turbine_prescrived_motion=0, turbine_prescrived_motion_heave=0, turbine_prescrived_motion_pitch=0;$/;"	v
turbinetorquecontrol	main.c	/^PetscInt turbinetorquecontrol=0;$/;"	v
u	data.c	/^	Cmpnts	*u, *uold;$/;"	m	struct:__anon17	file:
u	data.c	/^	PassiveScalar u, v, w, p;$/;"	m	struct:__anon11	file:
u	data.c	/^	PetscScalar u, v, w;$/;"	m	struct:__anon12	file:
u	data05.c	/^  Cmpnts	*u, *uold;$/;"	m	struct:__anon8	file:
u	data05.c	/^  PassiveScalar u, v, w, p;$/;"	m	struct:__anon2	file:
u	data05.c	/^  PetscScalar u, v, w;$/;"	m	struct:__anon3	file:
u_Cabot	wallfunction.c	/^double u_Cabot(double nu, double y, double utau, double dpdn)$/;"	f
u_Cabot_roughness	wallfunction.c	/^double u_Cabot_roughness(double nu, double y, double utau, double dpdn, double ks)$/;"	f
u_Werner	wallfunction.c	/^double u_Werner(double nu, double y, double utau)$/;"	f
u_angleInX_wrt_z	main.c	/^PetscReal u_angleInX_wrt_z=0.0;$/;"	v
u_angleInY_wrt_z	main.c	/^PetscReal u_angleInY_wrt_z=0.0;$/;"	v
u_frame	main.c	/^PetscReal u_frame, v_frame, w_frame;$/;"	v
u_loglaw_roughness	wallfunction.c	/^double u_loglaw_roughness(double nu, double y, double utau, double ks)$/;"	f
u_settling	main.c	/^PetscReal u_settling=0., v_settling=0., w_settling=0.; \/\/ settling velocities in x-, y- and z-directions  $/;"	v
ucont_plane_allocated	bcs.c	/^int ucont_plane_allocated=0;$/;"	v
uinr	data.c	/^	PetscReal	r[101], tin[101], uinr[101][1001];$/;"	m	struct:__anon18	file:
uinr	data05.c	/^  PetscReal	r[101], tin[101], uinr[101][1001];$/;"	m	struct:__anon9	file:
uold	data.c	/^	Cmpnts	*u, *uold;$/;"	m	struct:__anon17	file:
uold	data05.c	/^  Cmpnts	*u, *uold;$/;"	m	struct:__anon8	file:
user_ptr	main.c	/^UserCtx	*user_ptr;$/;"	v
v	data.c	/^	PassiveScalar u, v, w, p;$/;"	m	struct:__anon11	file:
v	data.c	/^	PetscScalar u, v, w;$/;"	m	struct:__anon12	file:
v	data05.c	/^  PassiveScalar u, v, w, p;$/;"	m	struct:__anon2	file:
v	data05.c	/^  PetscScalar u, v, w;$/;"	m	struct:__anon3	file:
v_frame	main.c	/^PetscReal u_frame, v_frame, w_frame;$/;"	v
v_settling	main.c	/^PetscReal u_settling=0., v_settling=0., w_settling=0.; \/\/ settling velocities in x-, y- and z-directions  $/;"	v
vc	data.c	/^int vc = 1;$/;"	v
vc	data05.c	/^int vc = 1;$/;"	v
viscosity_wallmodel	main.c	/^int viscosity_wallmodel=0;$/;"	v
vorticity	main.c	/^int vorticity=0;$/;"	v
vtkOutput	data.c	/^int vtkOutput = 0;$/;"	v
w	data.c	/^	PassiveScalar u, v, w, p;$/;"	m	struct:__anon11	file:
w	data.c	/^	PetscScalar u, v, w;$/;"	m	struct:__anon12	file:
w	data05.c	/^  PassiveScalar u, v, w, p;$/;"	m	struct:__anon2	file:
w	data05.c	/^  PetscScalar u, v, w;$/;"	m	struct:__anon3	file:
w_frame	main.c	/^PetscReal u_frame, v_frame, w_frame;$/;"	v
w_settling	main.c	/^PetscReal u_settling=0., v_settling=0., w_settling=0.; \/\/ settling velocities in x-, y- and z-directions  $/;"	v
wall_cs	les.c	/^const double wall_cs=0.001;$/;"	v
wall_distance	rhs2.c	/^int wall_distance=1;$/;"	v
wall_function	wallfunction.c	/^void wall_function (double nu, double sc, double sb, Cmpnts Ua, Cmpnts Uc, Cmpnts *Ub, PetscReal *ustar, double nx, double ny, double nz)$/;"	f
wall_function_freesurface	wallfunction.c	/^void wall_function_freesurface (double nu, double sb, Cmpnts Ua, Cmpnts Ub, PetscReal *ustar, double nx, double ny, double nz)$/;"	f
wall_function_roughness	wallfunction.c	/^void wall_function_roughness (double nu, double ks, double sc, double sb, Cmpnts Ua, Cmpnts Uc, Cmpnts *Ub, PetscReal *ustar, double nx, double ny, double nz)$/;"	f
wall_function_roughness_loglaw	wallfunction.c	/^void wall_function_roughness_loglaw (double nu, double ks, double sc, double sb, Cmpnts Ua, Cmpnts Uc, Cmpnts *Ub, PetscReal *ustar, double nx, double ny, double nz)$/;"	f
wall_function_slip	wallfunction.c	/^void wall_function_slip (double nu, double sc, double sb, Cmpnts Ua, Cmpnts Uc, Cmpnts *Ub, PetscReal *ustar, double nx, double ny, double nz)$/;"	f
wall_omega	k-omega.c	29;"	d	file:
wallfunction	main.c	/^PetscInt wallfunction=0;$/;"	v
wallmodel_test	main.c	/^PetscInt wallmodel_test = 0;$/;"	v
was_ksp_set	poisson.c	/^int was_ksp_set=0;$/;"	v
was_lhs_set	poisson.c	/^int was_lhs_set=0;$/;"	v
wave_K_single	main.c	/^double wave_K_single=1.0;$/;"	v
wave_a_single	main.c	/^double wave_a_single=0.0;	$/;"	v
wave_angle_single	main.c	/^double wave_angle_single=0.;$/;"	v
wave_average_k	main.c	/^int wave_average_k=0;$/;"	v
wave_depth	main.c	/^double wave_depth=1.0;$/;"	v
wave_i_ave	main.c	/^int wave_k_ave=0, wave_i_ave=0;$/;"	v
wave_k_ave	main.c	/^int wave_k_ave=0, wave_i_ave=0;$/;"	v
wave_momentum_source	main.c	/^int wave_momentum_source=0;$/;"	v
wave_recicle	main.c	/^int wave_recicle=10000;$/;"	v
wave_skip	main.c	/^int wave_skip=0;$/;"	v
wave_sponge_layer	main.c	/^int wave_sponge_layer=0;$/;"	v
wave_sponge_x01	main.c	/^double wave_sponge_x01=-10.;\/\/start of the sponge layer at the left x boundary$/;"	v
wave_sponge_x02	main.c	/^double wave_sponge_x02=16.;\/\/start of the sponge layer at the right x boundary	$/;"	v
wave_sponge_xs	main.c	/^double wave_sponge_xs=4.;\/\/length of the sponge layer$/;"	v
wave_sponge_z01	main.c	/^double wave_sponge_z01=-10.;\/\/start of the sponge layer at the left x boundary$/;"	v
wave_sponge_z02	main.c	/^double wave_sponge_z02=16.;\/\/start of the sponge layer at the right x boundary	$/;"	v
wave_sponge_zs	main.c	/^double wave_sponge_zs=4.;\/\/length of the sponge layer$/;"	v
wave_start_read	main.c	/^int wave_start_read=0;$/;"	v
wave_ti_start	main.c	/^int wave_ti_start=0;$/;"	v
wave_ti_startave	main.c	/^int wave_ti_startave=1000;$/;"	v
wave_wind_reflength	main.c	/^double wave_wind_reflength=1.0;$/;"	v
wave_wind_refvel	main.c	/^double wave_wind_refvel=1.0;$/;"	v
wave_wind_yshift	main.c	/^double wave_wind_yshift=0.0;$/;"	v
wavelength	main.c	/^PetscReal St_exp=0.5,wavelength=0.95;$/;"	v
weno3	level.c	/^double weno3(double f0, double f1, double f2, double f3, double wavespeed)$/;"	f
weno5	level.c	/^double weno5(double f0, double f1, double f2, double f3, double f4, double f5, double wavespeed)$/;"	f
wind_recicle	main.c	/^int wind_recicle=10000;$/;"	v
wind_skip	main.c	/^int wind_skip=0;$/;"	v
wind_start_read	main.c	/^int wind_start_read=0;$/;"	v
write_data	main.c	/^void write_data(UserCtx *user)$/;"	f
write_shear_stress_ibm	rhs2.c	/^void write_shear_stress_ibm()$/;"	f
x	data.c	/^	PetscScalar x, y, z;$/;"	m	struct:__anon13	file:
x	data.c	/^	PetscScalar x, y;$/;"	m	struct:__anon14	file:
x	data05.c	/^  PetscScalar x, y, z;$/;"	m	struct:__anon4	file:
x	data05.c	/^  PetscScalar x, y;$/;"	m	struct:__anon5	file:
x	fsi.c	/^   float x, y;$/;"	m	struct:Point	file:
x_bp	data.c	/^	PetscReal	*x_bp, *y_bp, *z_bp;	\/\/ Coordinates of IBM surface nodes$/;"	m	struct:__anon17	file:
x_bp	data05.c	/^  PetscReal	*x_bp, *y_bp, *z_bp;	\/\/ Coordinates of IBM surface nodes$/;"	m	struct:__anon8	file:
x_bp0	data.c	/^	PetscReal	*x_bp0, *y_bp0, *z_bp0;$/;"	m	struct:__anon17	file:
x_bp0	data05.c	/^  PetscReal	*x_bp0, *y_bp0, *z_bp0;$/;"	m	struct:__anon8	file:
x_bp_o	data.c	/^	PetscReal	*x_bp_o, *y_bp_o, *z_bp_o;$/;"	m	struct:__anon17	file:
x_bp_o	data05.c	/^  PetscReal	*x_bp_o, *y_bp_o, *z_bp_o;$/;"	m	struct:__anon8	file:
x_r	main.c	/^double x_r=0, y_r=0, z_r=0; \/\/ center of rotation of rfsi$/;"	v
xmax	main.c	/^double xmin,xmax,ymin,ymax,zmin,zmax; \/\/ the range of domain used for moving frame with wind turbines$/;"	v
xmin	main.c	/^double xmin,xmax,ymin,ymax,zmin,zmax; \/\/ the range of domain used for moving frame with wind turbines$/;"	v
xyz_input	data.c	/^int xyz_input=0;$/;"	v
xyz_input	data05.c	/^int xyz_input=0;$/;"	v
xyz_input	main.c	/^PetscInt xyz_input=0;$/;"	v
y	data.c	/^	PetscScalar x, y, z;$/;"	m	struct:__anon13	file:
y	data.c	/^	PetscScalar x, y;$/;"	m	struct:__anon14	file:
y	data05.c	/^  PetscScalar x, y, z;$/;"	m	struct:__anon4	file:
y	data05.c	/^  PetscScalar x, y;$/;"	m	struct:__anon5	file:
y	fsi.c	/^   float x, y;$/;"	m	struct:Point	file:
y_bp	data.c	/^	PetscReal	*x_bp, *y_bp, *z_bp;	\/\/ Coordinates of IBM surface nodes$/;"	m	struct:__anon17	file:
y_bp	data05.c	/^  PetscReal	*x_bp, *y_bp, *z_bp;	\/\/ Coordinates of IBM surface nodes$/;"	m	struct:__anon8	file:
y_bp0	data.c	/^	PetscReal	*x_bp0, *y_bp0, *z_bp0;$/;"	m	struct:__anon17	file:
y_bp0	data05.c	/^  PetscReal	*x_bp0, *y_bp0, *z_bp0;$/;"	m	struct:__anon8	file:
y_bp_o	data.c	/^	PetscReal	*x_bp_o, *y_bp_o, *z_bp_o;$/;"	m	struct:__anon17	file:
y_bp_o	data05.c	/^  PetscReal	*x_bp_o, *y_bp_o, *z_bp_o;$/;"	m	struct:__anon8	file:
y_r	main.c	/^double x_r=0, y_r=0, z_r=0; \/\/ center of rotation of rfsi$/;"	v
ymax	main.c	/^double xmin,xmax,ymin,ymax,zmin,zmax; \/\/ the range of domain used for moving frame with wind turbines$/;"	v
ymin	main.c	/^double xmin,xmax,ymin,ymax,zmin,zmax; \/\/ the range of domain used for moving frame with wind turbines$/;"	v
z	data.c	/^	PetscScalar x, y, z;$/;"	m	struct:__anon13	file:
z	data05.c	/^  PetscScalar x, y, z;$/;"	m	struct:__anon4	file:
z_bp	data.c	/^	PetscReal	*x_bp, *y_bp, *z_bp;	\/\/ Coordinates of IBM surface nodes$/;"	m	struct:__anon17	file:
z_bp	data05.c	/^  PetscReal	*x_bp, *y_bp, *z_bp;	\/\/ Coordinates of IBM surface nodes$/;"	m	struct:__anon8	file:
z_bp0	data.c	/^	PetscReal	*x_bp0, *y_bp0, *z_bp0;$/;"	m	struct:__anon17	file:
z_bp0	data05.c	/^  PetscReal	*x_bp0, *y_bp0, *z_bp0;$/;"	m	struct:__anon8	file:
z_bp_o	data.c	/^	PetscReal	*x_bp_o, *y_bp_o, *z_bp_o;$/;"	m	struct:__anon17	file:
z_bp_o	data05.c	/^  PetscReal	*x_bp_o, *y_bp_o, *z_bp_o;$/;"	m	struct:__anon8	file:
z_r	main.c	/^double x_r=0, y_r=0, z_r=0; \/\/ center of rotation of rfsi$/;"	v
zet	data.c	/^	PassiveScalar csi[3], eta[3], zet[3], aj;$/;"	m	struct:__anon15	file:
zet	data05.c	/^  PassiveScalar csi[3], eta[3], zet[3], aj;$/;"	m	struct:__anon6	file:
zmax	main.c	/^double xmin,xmax,ymin,ymax,zmin,zmax; \/\/ the range of domain used for moving frame with wind turbines$/;"	v
zmin	main.c	/^double xmin,xmax,ymin,ymax,zmin,zmax; \/\/ the range of domain used for moving frame with wind turbines$/;"	v
